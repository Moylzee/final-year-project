{
  "ActionConfig": {
    "description": "Defines components of the Action Config.",
    "properties": {
      "request": {
        "$ref": "#/definitions/RequestConfig",
        "description": "Configuration of outbound request."
      },
      "response": {
        "$ref": "#/definitions/ResponseConfig",
        "description": "Configuration of response processing."
      },
      "timeoutSeconds": {
        "description": "Optional 1-60 second timeout enforced on the execution or test of this action. This setting is invalid for Custom Authentication Actions.",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "ActionContractInput": {
    "description": "Contract definition.",
    "properties": {
      "input": {
        "$ref": "#/definitions/PostInputContract",
        "description": "Execution input contract"
      },
      "output": {
        "$ref": "#/definitions/PostOutputContract",
        "description": "Execution output contract"
      }
    },
    "required": [
      "input",
      "output"
    ],
    "type": "object"
  },
  "AcwSettings": {
    "properties": {
      "timeoutMs": {
        "description": "The amount of time the agent can stay in ACW (Min: 1 sec, Max: 60 min).  Can only be used when ACW is AGENT_REQUESTED, MANDATORY_TIMEOUT or MANDATORY_FORCED_TIMEOUT.",
        "format": "int32",
        "type": "integer"
      },
      "wrapupPrompt": {
        "description": "This field controls how the UI prompts the agent for a wrapup.",
        "enum": [
          "MANDATORY",
          "OPTIONAL",
          "MANDATORY_TIMEOUT",
          "MANDATORY_FORCED_TIMEOUT",
          "AGENT_REQUESTED"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "AddressableEntityRef": {
    "properties": {
      "id": {
        "type": "string"
      },
      "selfUri": {
        "format": "uri",
        "type": "string"
      }
    },
    "type": "object"
  },
  "AgentOwnedRouting": {
    "properties": {
      "enableAgentOwnedCallbacks": {
        "description": "Indicates if Agent Owned Callbacks are enabled for the queue",
        "type": "boolean"
      },
      "maxOwnedCallbackDelayHours": {
        "description": "The max amount of time a callback can be scheduled out into the future (in hours); Allowable range 1 - 720 hour(s) (inclusive)",
        "format": "int32",
        "type": "integer"
      },
      "maxOwnedCallbackHours": {
        "description": "The max amount of time a callback can be owned (in hours); Allowable range 1 - 168 hour(s) (inclusive)",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "AttemptLimits": {
    "properties": {
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "maxAttemptsPerContact": {
        "description": "The maximum number of times a contact can be called within the resetPeriod. Required if maxAttemptsPerNumber is not defined.",
        "format": "int32",
        "type": "integer"
      },
      "maxAttemptsPerNumber": {
        "description": "The maximum number of times a phone number can be called within the resetPeriod. Required if maxAttemptsPerContact is not defined.",
        "format": "int32",
        "type": "integer"
      },
      "name": {
        "type": "string"
      },
      "recallEntries": {
        "additionalProperties": {
          "$ref": "#/definitions/RecallEntry"
        },
        "description": "Configuration for recall attempts.",
        "type": "object"
      },
      "resetPeriod": {
        "description": "After how long the number of attempts will be set back to 0. Defaults to NEVER.",
        "enum": [
          "NEVER",
          "TODAY"
        ],
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "timeZoneId": {
        "description": "If the resetPeriod is TODAY, this specifies the timezone in which TODAY occurs. Required if the resetPeriod is TODAY.",
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "AuthenticationSettings": {
    "description": "Settings for authenticated webdeployments.",
    "properties": {
      "allowSessionUpgrade": {
        "description": "Allow end-users to upgrade an anonymous session to authenticated conversation.",
        "type": "boolean"
      },
      "enabled": {
        "description": "Indicate if these auth is required for this deployment. If, for example, this flag is set to true then webmessaging sessions can not send messages unless the end-user is authenticated.",
        "type": "boolean"
      },
      "integrationId": {
        "description": "The integration identifier which contains the auth settings required on the deployment.",
        "type": "string"
      }
    },
    "required": [
      "enabled",
      "integrationId"
    ],
    "type": "object"
  },
  "AuthzDivision": {
    "properties": {
      "description": {
        "description": "A helpful description for the division.",
        "type": "string"
      },
      "homeDivision": {
        "description": "A flag indicating whether this division is the \"Home\" (default) division. Cannot be modified and any supplied value will be ignored on create or update.",
        "readOnly": true,
        "type": "boolean"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "objectCounts": {
        "additionalProperties": {
          "format": "int64",
          "type": "integer"
        },
        "description": "A count of objects in this division, grouped by type.",
        "readOnly": true,
        "type": "object"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "description"
    ],
    "type": "object"
  },
  "Bullseye": {
    "properties": {
      "rings": {
        "description": "The bullseye rings configured for this queue.",
        "items": {
          "$ref": "#/definitions/Ring"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "CallableTime": {
    "properties": {
      "timeSlots": {
        "description": "The time intervals for which it is acceptable to place outbound calls.",
        "items": {
          "$ref": "#/definitions/CampaignTimeSlot"
        },
        "type": "array"
      },
      "timeZoneId": {
        "description": "The time zone for the time slots; for example, Africa/Abidjan",
        "example": "Africa/Abidjan",
        "type": "string"
      }
    },
    "required": [
      "timeSlots",
      "timeZoneId"
    ],
    "type": "object"
  },
  "CallableTimeSet": {
    "properties": {
      "callableTimes": {
        "description": "The list of CallableTimes for which it is acceptable to place outbound calls.",
        "items": {
          "$ref": "#/definitions/CallableTime"
        },
        "type": "array"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the CallableTimeSet.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "callableTimes",
      "name"
    ],
    "type": "object"
  },
  "Campaign": {
    "properties": {
      "abandonRate": {
        "description": "The targeted compliance abandon rate percentage. Required for power and predictive campaigns.",
        "format": "double",
        "type": "number"
      },
      "agentOwnedColumn": {
        "description": "Name of the contact list column containing the id of the agent who owns the record. Only applicable to preview campaigns.",
        "type": "string"
      },
      "alwaysRunning": {
        "description": "Indicates (when true) that the campaign will remain on after contacts are depleted, allowing additional contacts to be appended/added to the contact list and processed by the still-running campaign. The campaign can still be turned off manually.",
        "type": "boolean"
      },
      "callAnalysisLanguage": {
        "description": "The language the edge will use to analyze the call.",
        "type": "string"
      },
      "callAnalysisResponseSet": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The call analysis response set to handle call analysis results from the edge. Required for all dialing modes except preview."
      },
      "callableTimeSet": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The callable time set for this campaign to check before placing a call."
      },
      "callbackAutoAnswer": {
        "description": "The option manages the auto-answer callback calls",
        "type": "boolean"
      },
      "callerAddress": {
        "description": "The caller id phone number to be displayed on the outbound call.",
        "example": "(555) 555-5555",
        "type": "string"
      },
      "callerName": {
        "description": "The caller id name to be displayed on the outbound call.",
        "type": "string"
      },
      "campaignStatus": {
        "description": "The current status of the Campaign. A Campaign may be turned 'on' or 'off'. Required for updates.",
        "enum": [
          "on",
          "stopping",
          "off",
          "complete",
          "invalid",
          "forced_off",
          "forced_stopping"
        ],
        "type": "string"
      },
      "contactList": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The ContactList for this Campaign to dial."
      },
      "contactListFilters": {
        "description": "Filter to apply to the contact list before dialing. Currently a campaign can only have one filter applied.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "contactSort": {
        "$ref": "#/definitions/ContactSort",
        "description": "The order in which to sort contacts for dialing, based on a column."
      },
      "contactSorts": {
        "description": "The order in which to sort contacts for dialing, based on up to four columns.",
        "items": {
          "$ref": "#/definitions/ContactSort"
        },
        "type": "array"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dialingMode": {
        "description": "The strategy this Campaign will use for dialing.",
        "enum": [
          "agentless",
          "preview",
          "power",
          "predictive",
          "progressive",
          "external"
        ],
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The division this campaign belongs to."
      },
      "dncLists": {
        "description": "DncLists for this Campaign to check before placing a call.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "dynamicContactQueueingSettings": {
        "$ref": "#/definitions/DynamicContactQueueingSettings",
        "description": "Settings for dynamic queueing of contacts."
      },
      "dynamicLineBalancingSettings": {
        "$ref": "#/definitions/DynamicLineBalancingSettings",
        "description": "Dynamic line balancing settings"
      },
      "edgeGroup": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The EdgeGroup that will place the calls. Required for all dialing modes except preview."
      },
      "errors": {
        "description": "A list of current error conditions associated with the campaign.",
        "items": {
          "$ref": "#/definitions/RestErrorDetail"
        },
        "readOnly": true,
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "maxCallsPerAgent": {
        "description": "The maximum number of calls that can be placed per agent on this campaign",
        "format": "int32",
        "type": "integer"
      },
      "name": {
        "description": "The name of the Campaign.",
        "type": "string"
      },
      "noAnswerTimeout": {
        "description": "How long to wait before dispositioning a call as 'no-answer'. Default 30 seconds. Only applicable to non-preview campaigns.",
        "format": "int32",
        "type": "integer"
      },
      "outboundLineCount": {
        "description": "The number of outbound lines to be concurrently dialed. Only applicable to non-preview campaigns; only required for agentless.",
        "format": "int32",
        "type": "integer"
      },
      "phoneColumns": {
        "description": "The ContactPhoneNumberColumns on the ContactList that this Campaign should dial.",
        "items": {
          "$ref": "#/definitions/PhoneColumn"
        },
        "type": "array"
      },
      "previewTimeOutSeconds": {
        "description": "The number of seconds before a call will be automatically placed on a preview. A value of 0 indicates no automatic placement of calls. Only applicable to preview campaigns.",
        "format": "int64",
        "type": "integer"
      },
      "priority": {
        "description": "The priority of this campaign relative to other campaigns that are running on the same queue. 5 is the highest priority, 1 the lowest.",
        "format": "int32",
        "type": "integer"
      },
      "queue": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The Queue for this Campaign to route calls to. Required for all dialing modes except agentless."
      },
      "ruleSets": {
        "description": "Rule sets to be applied while this campaign is dialing.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "script": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The Script to be displayed to agents that are handling outbound calls. Required for all dialing modes except agentless."
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "site": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The identifier of the site to be used for dialing; can be set in place of an edge group."
      },
      "skillColumns": {
        "description": "The skill columns on the ContactList that this Campaign should take into account when dialing",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "skipPreviewDisabled": {
        "description": "Whether or not agents can skip previews without placing a call. Only applicable for preview campaigns.",
        "type": "boolean"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "callerAddress",
      "callerName",
      "contactList",
      "dialingMode",
      "name",
      "phoneColumns"
    ],
    "type": "object"
  },
  "CampaignRule": {
    "properties": {
      "campaignRuleActions": {
        "description": "The list of actions that are executed if the conditions are satisfied.",
        "items": {
          "$ref": "#/definitions/CampaignRuleAction"
        },
        "type": "array"
      },
      "campaignRuleConditions": {
        "description": "The list of conditions that are evaluated on the entities.",
        "items": {
          "$ref": "#/definitions/CampaignRuleCondition"
        },
        "type": "array"
      },
      "campaignRuleEntities": {
        "$ref": "#/definitions/CampaignRuleEntities",
        "description": "The list of entities that this CampaignRule monitors."
      },
      "campaignRuleProcessing": {
        "description": "CampaignRule processing algorithm",
        "enum": [
          "v2"
        ],
        "type": "string"
      },
      "conditionGroups": {
        "description": "List of condition groups that are evaluated, used only with campaignRuleProcessing=\"v2\"",
        "items": {
          "$ref": "#/definitions/CampaignRuleConditionGroup"
        },
        "type": "array"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "enabled": {
        "description": "Whether or not this CampaignRule is currently enabled. Required on updates.",
        "type": "boolean"
      },
      "executionSettings": {
        "$ref": "#/definitions/CampaignRuleExecutionSettings",
        "description": "CampaignRule execution settings"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "matchAnyConditions": {
        "type": "boolean"
      },
      "name": {
        "description": "The name of the CampaignRule.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "campaignRuleActions",
      "campaignRuleConditions",
      "campaignRuleEntities",
      "name"
    ],
    "type": "object"
  },
  "CampaignRuleAction": {
    "properties": {
      "actionType": {
        "description": "The action to take on the campaignRuleActionEntities.",
        "enum": [
          "turnOnCampaign",
          "turnOffCampaign",
          "turnOnSequence",
          "turnOffSequence",
          "setCampaignPriority",
          "recycleCampaign",
          "setCampaignDialingMode",
          "setCampaignAbandonRate",
          "setCampaignNumberOfLines",
          "setCampaignWeight",
          "setCampaignMaxCallsPerAgent",
          "setCampaignMessagesPerMinute",
          "changeCampaignQueue",
          "changeCampaignTemplate"
        ],
        "type": "string"
      },
      "campaignRuleActionEntities": {
        "$ref": "#/definitions/CampaignRuleActionEntities",
        "description": "The list of entities that this action will apply to."
      },
      "id": {
        "type": "string"
      },
      "parameters": {
        "$ref": "#/definitions/CampaignRuleParameters",
        "description": "The parameters for the CampaignRuleAction. Required for certain actionTypes."
      }
    },
    "required": [
      "actionType",
      "campaignRuleActionEntities"
    ],
    "type": "object"
  },
  "CampaignRuleCondition": {
    "properties": {
      "conditionType": {
        "description": "The type of condition to evaluate.",
        "enum": [
          "campaignProgress",
          "campaignAgents",
          "campaignRecordsAttempted",
          "campaignBusinessSuccess",
          "campaignBusinessFailure",
          "campaignBusinessNeutral",
          "campaignValidAttempts",
          "campaignRightPartyContacts"
        ],
        "type": "string"
      },
      "id": {
        "type": "string"
      },
      "parameters": {
        "$ref": "#/definitions/CampaignRuleParameters",
        "description": "The parameters for the CampaignRuleCondition."
      }
    },
    "required": [
      "conditionType",
      "parameters"
    ],
    "type": "object"
  },
  "CampaignRuleConditionGroup": {
    "properties": {
      "conditions": {
        "description": "The parameters for the CampaignRuleCondition.",
        "items": {
          "$ref": "#/definitions/CampaignRuleCondition"
        },
        "type": "array"
      },
      "matchAnyConditions": {
        "description": "Whether or not this condition group should be evaluated as true if any of sub conditions is matched",
        "type": "boolean"
      }
    },
    "required": [
      "conditions",
      "matchAnyConditions"
    ],
    "type": "object"
  },
  "CampaignRuleEntities": {
    "properties": {
      "campaigns": {
        "description": "The list of campaigns for a CampaignRule to monitor. Required if the CampaignRule has any conditions that run on a campaign.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "sequences": {
        "description": "The list of sequences for a CampaignRule to monitor. Required if the CampaignRule has any conditions that run on a sequence.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "CampaignRuleExecutionSettings": {
    "properties": {
      "frequency": {
        "description": "Execution control frequency",
        "enum": [
          "onEachTrigger",
          "oncePerDay"
        ],
        "type": "string"
      },
      "timeZoneId": {
        "description": "The time zone for the execution control frequency=\"oncePerDay\"; for example, Africa/Abidjan. This property is ignored when frequency is not \"oncePerDay\"",
        "example": "Africa/Abidjan",
        "type": "string"
      }
    },
    "required": [
      "frequency"
    ],
    "type": "object"
  },
  "CampaignSequence": {
    "properties": {
      "campaigns": {
        "description": "The ordered list of Campaigns that this CampaignSequence will run.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "currentCampaign": {
        "description": "A zero-based index indicating which Campaign this CampaignSequence is currently on.",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "repeat": {
        "description": "Indicates if a sequence should repeat from the beginning after the last campaign completes. Default is false.",
        "type": "boolean"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "status": {
        "description": "The current status of the CampaignSequence. A CampaignSequence can be turned 'on' or 'off'.",
        "enum": [
          "on",
          "off",
          "complete"
        ],
        "type": "string"
      },
      "stopMessage": {
        "description": "A message indicating if and why a CampaignSequence has stopped unexpectedly.",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "campaigns",
      "currentCampaign",
      "status"
    ],
    "type": "object"
  },
  "CannedResponseLibraries": {
    "properties": {
      "libraryIds": {
        "description": "Set of canned response library IDs associated with the queue only when mode is SelectedOnly.",
        "items": {
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "mode": {
        "description": "The association mode of canned response libraries to queue",
        "enum": [
          "All",
          "SelectedOnly",
          "None"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "CobrowseSettings": {
    "description": "Settings concerning cobrowse",
    "properties": {
      "allowAgentControl": {
        "description": "Whether the viewer should have option to request control",
        "type": "boolean"
      },
      "allowAgentNavigation": {
        "description": "Whether the viewer should have option to request navigation",
        "type": "boolean"
      },
      "channels": {
        "description": "Cobrowse channels for web messenger",
        "items": {
          "enum": [
            "Webmessaging",
            "Voice"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "enabled": {
        "description": "Whether or not cobrowse is enabled",
        "type": "boolean"
      },
      "maskSelectors": {
        "description": "Mask patterns that will apply to pages being shared",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "pauseCriteria": {
        "description": "Pause criteria that will pause cobrowse if some of them are met in the user's URL",
        "items": {
          "$ref": "#/definitions/PauseCriteria"
        },
        "type": "array"
      },
      "readonlySelectors": {
        "description": "Readonly patterns that will apply to pages being shared",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "Column": {
    "properties": {
      "columnName": {
        "description": "Column name. Mandatory for Fixed position/length file format.",
        "type": "string"
      },
      "columnNumber": {
        "description": "0 based column number in delimited file format",
        "format": "int32",
        "type": "integer"
      },
      "length": {
        "description": "Column width. Mandatory for Fixed position/length file format.",
        "format": "int32",
        "type": "integer"
      },
      "startPosition": {
        "description": "Zero-based position of the first column's character. Mandatory for Fixed position/length file format.",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "ColumnDataTypeSpecification": {
    "properties": {
      "columnDataType": {
        "description": "The data type of the column selected for dynamic queueing (TEXT, NUMERIC or TIMESTAMP)",
        "enum": [
          "NUMERIC",
          "TEXT",
          "TIMESTAMP"
        ],
        "type": "string"
      },
      "columnName": {
        "description": "The column name of a column selected for dynamic queueing",
        "type": "string"
      },
      "max": {
        "description": "The maximum length of the numeric column selected for dynamic queueing",
        "format": "int32",
        "type": "integer"
      },
      "maxLength": {
        "description": "The maximum length of the text column selected for dynamic queueing",
        "format": "int32",
        "type": "integer"
      },
      "min": {
        "description": "The minimum length of the numeric column selected for dynamic queueing",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "ConditionalGroupRouting": {
    "properties": {
      "rules": {
        "description": "The set of rules to be executed for each conversation",
        "items": {
          "$ref": "#/definitions/ConditionalGroupRoutingRule"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "Contact": {
    "properties": {
      "address": {
        "description": "Email address or phone number for this contact type",
        "type": "string"
      },
      "countryCode": {
        "type": "string"
      },
      "display": {
        "description": "Formatted version of the address property",
        "readOnly": true,
        "type": "string"
      },
      "extension": {
        "description": "Use internal extension instead of address. Mutually exclusive with the address field.",
        "type": "string"
      },
      "integration": {
        "description": "Integration tag value if this number is associated with an external integration.",
        "example": "microsoftteams",
        "type": "string"
      },
      "mediaType": {
        "enum": [
          "PHONE",
          "EMAIL",
          "SMS"
        ],
        "type": "string"
      },
      "type": {
        "enum": [
          "PRIMARY",
          "WORK",
          "WORK2",
          "WORK3",
          "WORK4",
          "HOME",
          "MOBILE",
          "MAIN",
          "OTHER"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "ContactAddress": {
    "properties": {
      "address1": {
        "type": "string"
      },
      "address2": {
        "type": "string"
      },
      "city": {
        "type": "string"
      },
      "countryCode": {
        "type": "string"
      },
      "postalCode": {
        "type": "string"
      },
      "state": {
        "type": "string"
      }
    },
    "type": "object"
  },
  "ContactAddressableEntityRef": {
    "properties": {
      "id": {
        "type": "string"
      },
      "selfUri": {
        "format": "uri",
        "type": "string"
      }
    },
    "type": "object"
  },
  "ContactList": {
    "properties": {
      "attemptLimits": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "AttemptLimits for this ContactList."
      },
      "automaticTimeZoneMapping": {
        "description": "Indicates if automatic time zone mapping is to be used for this ContactList.",
        "type": "boolean"
      },
      "columnDataTypeSpecifications": {
        "description": "The settings of the columns selected for dynamic queueing",
        "items": {
          "$ref": "#/definitions/ColumnDataTypeSpecification"
        },
        "type": "array"
      },
      "columnNames": {
        "description": "The names of the contact data columns.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The division this entity belongs to."
      },
      "emailColumns": {
        "description": "Indicates which columns are email addresses",
        "items": {
          "$ref": "#/definitions/EmailColumn"
        },
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "importStatus": {
        "$ref": "#/definitions/ImportStatus",
        "description": "The status of the import process.",
        "readOnly": true
      },
      "name": {
        "type": "string"
      },
      "phoneColumns": {
        "description": "Indicates which columns are phone numbers.",
        "items": {
          "$ref": "#/definitions/ContactPhoneNumberColumn"
        },
        "type": "array"
      },
      "previewModeAcceptedValues": {
        "description": "The values in the previewModeColumnName column that indicate a contact should always be dialed in preview mode.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "previewModeColumnName": {
        "description": "A column to check if a contact should always be dialed in preview mode.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "size": {
        "description": "The number of contacts in the ContactList.",
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      },
      "trimWhitespace": {
        "description": "Whether to trim white space when importing a contactlist csv file, default value = true",
        "type": "boolean"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      },
      "zipCodeColumnName": {
        "description": "The name of contact list column containing the zip code for use with automatic time zone mapping. Only allowed if 'automaticTimeZoneMapping' is set to true.",
        "type": "string"
      }
    },
    "required": [
      "columnNames"
    ],
    "type": "object"
  },
  "ContactListFilter": {
    "properties": {
      "clauses": {
        "description": "Groups of conditions to filter the contacts by.",
        "items": {
          "$ref": "#/definitions/ContactListFilterClause"
        },
        "type": "array"
      },
      "contactList": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The contact list the filter is based on. Required if sourceType is ContactList"
      },
      "contactListTemplate": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The contact list template the filter is based on. Required if sourceType is ContactListTemplate"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "filterType": {
        "description": "How to join clauses together.",
        "enum": [
          "AND",
          "OR"
        ],
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the list.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "sourceType": {
        "description": "The source type the filter is based on.",
        "enum": [
          "ContactList",
          "ContactListTemplate"
        ],
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "ContactListFilterClause": {
    "properties": {
      "filterType": {
        "description": "How to join predicates together.",
        "enum": [
          "AND",
          "OR"
        ],
        "type": "string"
      },
      "predicates": {
        "description": "Conditions to filter the contacts by.",
        "items": {
          "$ref": "#/definitions/ContactListFilterPredicate"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "ContactListTemplate": {
    "properties": {
      "attemptLimits": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "AttemptLimits for this ContactListTemplate."
      },
      "automaticTimeZoneMapping": {
        "description": "Indicates if automatic time zone mapping is to be used for this ContactListTemplate.",
        "type": "boolean"
      },
      "columnDataTypeSpecifications": {
        "description": "The settings of the columns selected for dynamic queueing",
        "items": {
          "$ref": "#/definitions/ColumnDataTypeSpecification"
        },
        "type": "array"
      },
      "columnNames": {
        "description": "The names of the contact data columns.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "emailColumns": {
        "description": "Indicates which columns are email addresses",
        "items": {
          "$ref": "#/definitions/EmailColumn"
        },
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "phoneColumns": {
        "description": "Indicates which columns are phone numbers.",
        "items": {
          "$ref": "#/definitions/ContactPhoneNumberColumn"
        },
        "type": "array"
      },
      "previewModeAcceptedValues": {
        "description": "The values in the previewModeColumnName column that indicate a contact should always be dialed in preview mode.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "previewModeColumnName": {
        "description": "A column to check if a contact should always be dialed in preview mode.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "trimWhitespace": {
        "description": "Whether to trim white space when importing a ContactListTemplate csv file, default value = true",
        "type": "boolean"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      },
      "zipCodeColumnName": {
        "description": "The name of ContactListTemplate column containing the zip code for use with automatic time zone mapping. Only allowed if 'automaticTimeZoneMapping' is set to true.",
        "type": "string"
      }
    },
    "required": [
      "columnNames"
    ],
    "type": "object"
  },
  "ContactPhoneNumberColumn": {
    "properties": {
      "callableTimeColumn": {
        "description": "A column that indicates the timezone to use for a given contact when checking callable times. Not allowed if 'automaticTimeZoneMapping' is set to true.",
        "type": "string"
      },
      "columnName": {
        "description": "The name of the phone column.",
        "type": "string"
      },
      "type": {
        "description": "Indicates the type of the phone column. For example, 'cell' or 'home'.",
        "type": "string"
      }
    },
    "required": [
      "columnName",
      "type"
    ],
    "type": "object"
  },
  "ContactSort": {
    "properties": {
      "direction": {
        "description": "The direction in which to sort contacts.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "type": "string"
      },
      "fieldName": {
        "type": "string"
      },
      "numeric": {
        "description": "Whether or not the column contains numeric data.",
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "ContentSetting": {
    "properties": {
      "story": {
        "$ref": "#/definitions/StorySetting",
        "description": "Settings relating to facebook and instagram stories feature"
      }
    },
    "type": "object"
  },
  "CreateIntegrationRequest": {
    "description": "Details for an Integration",
    "properties": {
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "integrationType": {
        "$ref": "#/definitions/IntegrationType",
        "description": "Type of the integration to create."
      },
      "name": {
        "description": "The name of the integration, used to distinguish this integration from others of the same type.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "integrationType",
      "name"
    ],
    "type": "object"
  },
  "CreateQueueRequest": {
    "properties": {
      "acwSettings": {
        "$ref": "#/definitions/AcwSettings",
        "description": "The ACW settings for the queue."
      },
      "agentOwnedRouting": {
        "$ref": "#/definitions/AgentOwnedRouting",
        "description": "The Agent Owned Routing settings for the queue"
      },
      "autoAnswerOnly": {
        "description": "Specifies whether the configured whisper should play for all ACD calls, or only for those which are auto-answered.",
        "type": "boolean"
      },
      "bullseye": {
        "$ref": "#/definitions/Bullseye",
        "description": "The bullseye settings for the queue."
      },
      "callingPartyName": {
        "description": "The name to use for caller identification for outbound calls from this queue.",
        "type": "string"
      },
      "callingPartyNumber": {
        "description": "The phone number to use for caller identification for outbound calls from this queue.",
        "type": "string"
      },
      "cannedResponseLibraries": {
        "$ref": "#/definitions/CannedResponseLibraries",
        "description": "Canned response library IDs and mode with which they are associated with the queue"
      },
      "conditionalGroupRouting": {
        "$ref": "#/definitions/ConditionalGroupRouting",
        "description": "The Conditional Group Routing settings for the queue."
      },
      "createdBy": {
        "description": "The ID of the user that created the queue.",
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the queue was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the queue. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "defaultScripts": {
        "additionalProperties": {
          "$ref": "#/definitions/Script"
        },
        "description": "The default script Ids for the communication types.",
        "type": "object"
      },
      "description": {
        "description": "The queue description.",
        "type": "string"
      },
      "directRouting": {
        "$ref": "#/definitions/DirectRouting",
        "description": "The Direct Routing settings for the queue"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "emailInQueueFlow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The in-queue flow to use for email conversations waiting in queue."
      },
      "enableAudioMonitoring": {
        "description": "Indicates whether audio monitoring is enabled for this queue.",
        "type": "boolean"
      },
      "enableManualAssignment": {
        "description": "Indicates whether manual assignment is enabled for this queue.",
        "type": "boolean"
      },
      "enableTranscription": {
        "description": "Indicates whether voice transcription is enabled for this queue.",
        "type": "boolean"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "joinedMemberCount": {
        "description": "The number of joined members in the queue.",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "mediaSettings": {
        "$ref": "#/definitions/QueueMediaSettings",
        "description": "The media settings for the queue."
      },
      "memberCount": {
        "description": "The total number of members in the queue.",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "memberGroups": {
        "description": "The groups of agents associated with the queue, if any.  Queue membership will update to match group membership changes.",
        "items": {
          "$ref": "#/definitions/MemberGroup"
        },
        "type": "array",
        "uniqueItems": true
      },
      "messageInQueueFlow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The in-queue flow to use for message conversations waiting in queue."
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the queue.",
        "type": "string"
      },
      "name": {
        "description": "The queue name",
        "type": "string"
      },
      "onHoldPrompt": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The audio to be played when calls on this queue are on hold. If not configured, the default on-hold music will play."
      },
      "outboundEmailAddress": {
        "$ref": "#/definitions/QueueEmailAddress",
        "description": "The default email address to use for outbound email from this queue."
      },
      "outboundMessagingAddresses": {
        "$ref": "#/definitions/QueueMessagingAddresses",
        "description": "The messaging addresses for the queue."
      },
      "peerId": {
        "description": "The ID of an associated external queue.",
        "type": "string"
      },
      "queueFlow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The in-queue flow to use for call conversations waiting in queue."
      },
      "routingRules": {
        "description": "The routing rules for the queue, used for Preferred Agent Routing.",
        "items": {
          "$ref": "#/definitions/RoutingRule"
        },
        "type": "array"
      },
      "scoringMethod": {
        "description": "The Scoring Method for the queue",
        "enum": [
          "TimestampAndPriority",
          "PriorityOnly"
        ],
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "skillEvaluationMethod": {
        "description": "The skill evaluation method to use when routing conversations.",
        "enum": [
          "NONE",
          "BEST",
          "ALL"
        ],
        "type": "string"
      },
      "sourceQueueId": {
        "description": "The id of an existing queue to copy the settings (does not include GPR settings) from when creating a new queue.",
        "type": "string"
      },
      "suppressInQueueCallRecording": {
        "description": "Indicates whether recording in-queue calls is suppressed for this queue.",
        "type": "boolean"
      },
      "userMemberCount": {
        "description": "The number of user members (i.e., non-group members) in the queue.",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "whisperPrompt": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The prompt used for whisper on the queue, if configured."
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "CreateResponseAssetRequest": {
    "properties": {
      "contentMd5": {
        "description": "Content MD-5 of the file to upload",
        "type": "string"
      },
      "divisionId": {
        "description": "Division to associate to this asset. Can only be used with this division.",
        "type": "string"
      },
      "name": {
        "description": "Name of the file to upload. It must not start with a dot and not end with a forward slash. Whitespace and the following characters are not allowed: \\{^}%`]\"\u003e[~\u003c#|",
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "CreateTriggerRequest": {
    "properties": {
      "delayBySeconds": {
        "description": "Optional delay invoking target after trigger fires. Must be in the range of 60 to 900 seconds. Only one of eventTTLSeconds or delayBySeconds can be set.",
        "format": "int32",
        "type": "integer"
      },
      "description": {
        "description": "Description of the trigger. Can be up to 512 characters in length.",
        "type": "string"
      },
      "enabled": {
        "description": "Boolean indicating if Trigger is enabled",
        "type": "boolean"
      },
      "eventTTLSeconds": {
        "description": "Optional length of time that events are meaningful after origination. Events older than this threshold may be dropped if the platform is delayed in processing events. Unset means events are valid indefinitely, otherwise must be set to at least 10 seconds. Only one of eventTTLSeconds or delayBySeconds can be set.",
        "format": "int32",
        "type": "integer"
      },
      "matchCriteria": {
        "description": "The configuration for when a trigger is considered to be a match for an event. When not provided, all events will fire the trigger",
        "items": {
          "$ref": "#/definitions/MatchCriteria"
        },
        "type": "array"
      },
      "name": {
        "description": "The name of the trigger",
        "type": "string"
      },
      "target": {
        "$ref": "#/definitions/TriggerTarget",
        "description": "The target to invoke when a matching event is received"
      },
      "topicName": {
        "description": "The topic that will cause the trigger to be invoked. Cannot be updated after creation. Valid topics can be found at /processautomation/triggers/topics ",
        "type": "string"
      }
    },
    "required": [
      "enabled",
      "name",
      "target",
      "topicName"
    ],
    "type": "object"
  },
  "CreateUser": {
    "properties": {
      "addresses": {
        "description": "Email addresses and phone numbers for this user",
        "items": {
          "$ref": "#/definitions/Contact"
        },
        "type": "array"
      },
      "department": {
        "type": "string"
      },
      "divisionId": {
        "description": "The division to which this user will belong",
        "type": "string"
      },
      "email": {
        "description": "User's email and username",
        "type": "string"
      },
      "name": {
        "description": "User's full name",
        "type": "string"
      },
      "password": {
        "description": "User's password",
        "type": "string"
      },
      "state": {
        "description": "Optional initialized state of the user. If not specified, state will be Active if invites are sent, otherwise Inactive.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "type": "string"
      },
      "title": {
        "type": "string"
      }
    },
    "required": [
      "divisionId",
      "email",
      "name"
    ],
    "type": "object"
  },
  "CreateUtilizationLabelRequest": {
    "properties": {
      "name": {
        "description": "The utilization label name.",
        "type": "string"
      },
      "utilization": {
        "$ref": "#/definitions/LabelUtilizationRequest",
        "description": "Org level utilization settings for the new label. If not specified, default utilization settings will be applied."
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "Credential": {
    "properties": {
      "credentialFields": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "type": {
        "$ref": "#/definitions/CredentialType",
        "description": "The type of credential."
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "CredentialType": {
    "properties": {
      "displayOrder": {
        "description": "Order in which properties should be displayed in the UI.",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "properties": {
        "description": "Properties describing credentials of this type.",
        "readOnly": true,
        "type": "object"
      },
      "required": {
        "description": "Properties that are required fields.",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "type": "array"
      }
    },
    "type": "object"
  },
  "CustomI18nLabels": {
    "description": "The localization settings for homescreen",
    "properties": {
      "language": {
        "description": "Language of localized labels in homescreen app (eg. en-us, de-de)",
        "type": "string"
      },
      "localizedLabels": {
        "description": "Contains localized labels used in homescreen app",
        "items": {
          "$ref": "#/definitions/LocalizedLabels"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "DIDPool": {
    "properties": {
      "comments": {
        "type": "string"
      },
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "endPhoneNumber": {
        "description": "The ending phone number for the range of this DID pool. Must be in E.164 format",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "provider": {
        "description": "The provider for this DID pool",
        "enum": [
          "PURE_CLOUD",
          "PURE_CLOUD_VOICE"
        ],
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "startPhoneNumber": {
        "description": "The starting phone number for the range of this DID pool. Must be in E.164 format",
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "endPhoneNumber",
      "name",
      "startPhoneNumber"
    ],
    "type": "object"
  },
  "DataSchema": {
    "properties": {
      "appliesTo": {
        "description": "Indicates the built-in entity type to which this schema applies.",
        "items": {
          "enum": [
            "CONTACT",
            "CONVERSATION",
            "EXTERNAL_ORGANIZATION",
            "OPEN_ACTION",
            "WORKITEM"
          ],
          "type": "string"
        },
        "readOnly": true,
        "type": "array"
      },
      "createdBy": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The URI of the user that created this schema.",
        "readOnly": true
      },
      "dateCreated": {
        "description": "The date and time this schema was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "enabled": {
        "description": "The schema's enabled/disabled status. A disabled schema cannot be assigned to any other entities, but the data on those entities from the schema still exists.",
        "type": "boolean"
      },
      "id": {
        "description": "The globally unique identifier for the schema.  Only required if a schema is used for custom fields during external entity creation or updates.",
        "type": "string"
      },
      "jsonSchema": {
        "$ref": "#/definitions/JsonSchemaDocument",
        "description": "A JSON schema defining the extension to the built-in entity type.",
        "example": "{\n    \"appliesTo\": [\n        \"CONTACT\"\n    ],\n    \"jsonSchema\": {\n        \"title\": \"Example schema\",\n        \"description\": \"Uses all of the core types for illustrative purposes\",\n        \"properties\": {\n            \"field1_text\": {\n                \"title\": \"Field 1\",\n                \"description\": \"field1\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/text\" } ],\n                \"minLength\": 0,\n                \"maxLength\": 39\n            },\n            \"field2_longtext\": {\n                \"title\": \"Field 2\",\n                \"description\": \"field2\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/longtext\" } ],\n                \"minLength\": 0,\n                \"maxLength\": 1000\n            },\n            \"field3_enum\": {\n                \"title\": \"Field 3\",\n                \"description\": \"Field 3\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/enum\" } ],\n                \"enum\": [\n                    \"enum1\",\n                    \"enum2\"\n                ]\n            },\n            \"field4_identifier\": {\n                \"title\": \"field4\",\n                \"description\": \"Field 4\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/identifier\" } ],\n                \"minLength\": 0,\n                \"maxLength\": 37\n            },\n            \"field5_integer\": {\n                \"title\": \"field5\",\n                \"description\": \"Field 5\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/integer\" } ],\n                \"minimum\": 1,\n                \"maximum\": 24\n            },\n            \"field6_number\": {\n                \"title\": \"field6\",\n                \"description\": \"Field 6\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/number\" } ],\n                \"minimum\": 2.7,\n                \"maximum\": 31.3\n            },\n            \"field7_date\": {\n                \"title\": \"field7\",\n                \"description\": \"Field 7\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/date\"}]\n            },\n            \"field8_datetime\": {\n                \"title\": \"field8\",\n                \"description\": \"Field 8\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/datetime\"}]\n            },\n            \"field9_checkbox\": {\n                \"title\": \"field9\",\n                \"description\": \"Field 9\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/checkbox\"}]\n            },\n            \"field10_tag\": {\n                \"title\": \"field10\",\n                \"description\": \"Field 10\",\n                \"allOf\": [ { \"$ref\": \"#/definitions/tag\" } ],\n                \"items\": {\n                    \"minLength\": 1,\n                    \"maxLength\": 20\n                },\n                \"minItems\": 0,\n                \"maxItems\": 10,\n                \"uniqueItems\": true\n            }\n        },\n        \"$schema\": \"http://json-schema.org/draft-04/schema#\"\n    }\n}"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The schema's version, a positive integer. Required for updates.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "jsonSchema",
      "version"
    ],
    "type": "object"
  },
  "DataTable": {
    "description": "Contains a metadata representation for a JSON schema stored in DataTables along with an optional field for the schema itself",
    "properties": {
      "description": {
        "description": "The description from the JSON schema (equates to the Description field on the JSON schema.)",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "schema": {
        "$ref": "#/definitions/JsonSchemaDocument",
        "description": "the schema as stored in the system."
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "DialerRule": {
    "properties": {
      "actions": {
        "description": "The list of actions to be taken if the conditions are true.",
        "items": {
          "$ref": "#/definitions/DialerAction"
        },
        "type": "array"
      },
      "category": {
        "description": "The category of the rule.",
        "enum": [
          "DIALER_PRECALL",
          "DIALER_WRAPUP"
        ],
        "type": "string"
      },
      "conditions": {
        "description": "A list of Conditions. All of the Conditions must evaluate to true to trigger the actions.",
        "items": {
          "$ref": "#/definitions/Condition"
        },
        "type": "array"
      },
      "id": {
        "description": "The identifier of the rule.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the rule.",
        "type": "string"
      },
      "order": {
        "description": "The ranked order of the rule. Rules are processed from lowest number to highest.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "category",
      "conditions",
      "name"
    ],
    "type": "object"
  },
  "DigitalRule": {
    "properties": {
      "actions": {
        "description": "The list of actions to be taken if all conditions are true.",
        "items": {
          "$ref": "#/definitions/DigitalAction"
        },
        "type": "array"
      },
      "category": {
        "description": "The category of the rule.",
        "enum": [
          "PreContact",
          "PostContact"
        ],
        "type": "string"
      },
      "conditions": {
        "description": "A list of conditions to evaluate. All of the Conditions must evaluate to true to trigger the actions.",
        "items": {
          "$ref": "#/definitions/DigitalCondition"
        },
        "type": "array"
      },
      "id": {
        "description": "The identifier of the rule.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the rule.",
        "type": "string"
      },
      "order": {
        "description": "The ranked order of the rule. Rules are processed from lowest number to highest.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "actions",
      "category",
      "conditions",
      "name",
      "order"
    ],
    "type": "object"
  },
  "DigitalRuleSet": {
    "properties": {
      "contactList": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "A ContactList to provide suggestions for contact columns on relevant conditions and actions."
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "rules": {
        "description": "The list of rules.",
        "items": {
          "$ref": "#/definitions/DigitalRule"
        },
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "rules"
    ],
    "type": "object"
  },
  "DirectRouting": {
    "properties": {
      "agentWaitSeconds": {
        "description": "Time (in seconds) that a Direct Routing interaction will wait for Direct Routing agent before going to selected backup. Valid range [60, 864000].",
        "format": "int32",
        "type": "integer"
      },
      "backupQueueId": {
        "description": "ID of another queue to be used as the default backup if an agent does not have their Backup Settings configured. If not set, the current queue will be used as backup, but with Direct Routing criteria removed from the conversation.",
        "type": "string"
      },
      "callMediaSettings": {
        "$ref": "#/definitions/DirectRoutingMediaSettings",
        "description": "Direct Routing Settings specific to Call media."
      },
      "emailMediaSettings": {
        "$ref": "#/definitions/DirectRoutingMediaSettings",
        "description": "Direct Routing Settings specific to Email media."
      },
      "messageMediaSettings": {
        "$ref": "#/definitions/DirectRoutingMediaSettings",
        "description": "Direct Routing Settings specific to Message media."
      },
      "waitForAgent": {
        "description": "Flag indicating if Direct Routing interactions should wait for Direct Routing agent or go immediately to selected backup.",
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "Division": {
    "properties": {
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "DncListCreate": {
    "properties": {
      "campaignId": {
        "description": "A dnc.com campaignId. Optional if the dncSourceType is dnc.com.",
        "type": "string"
      },
      "contactMethod": {
        "description": "The contact method. Required if dncSourceType is rds.",
        "enum": [
          "Email",
          "Phone",
          "Any"
        ],
        "type": "string"
      },
      "customExclusionColumn": {
        "description": "The column to evaluate exclusion against. Required if the dncSourceType is rds_custom.",
        "type": "string"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The division this DncList belongs to."
      },
      "dncCodes": {
        "description": "The list of dnc.com codes to be treated as DNC. Required if the dncSourceType is dnc.com.",
        "items": {
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "dncSourceType": {
        "description": "The type of the DncList.",
        "enum": [
          "rds",
          "rds_custom",
          "dnc.com",
          "gryphon"
        ],
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "importStatus": {
        "$ref": "#/definitions/ImportStatus",
        "description": "The status of the import process",
        "readOnly": true
      },
      "licenseId": {
        "description": "A gryphon license number. Required if the dncSourceType is gryphon.",
        "type": "string"
      },
      "loginId": {
        "description": "A dnc.com loginId. Required if the dncSourceType is dnc.com.",
        "type": "string"
      },
      "name": {
        "description": "The name of the DncList.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "size": {
        "description": "The total number of phone numbers in the DncList.",
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "dncSourceType",
      "name"
    ],
    "type": "object"
  },
  "DomainEntityRef": {
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "format": "uri",
        "type": "string"
      }
    },
    "type": "object"
  },
  "DomainOrganizationRoleCreate": {
    "properties": {
      "base": {
        "type": "boolean"
      },
      "default": {
        "type": "boolean"
      },
      "defaultRoleId": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "id": {
        "description": "role id",
        "type": "string"
      },
      "name": {
        "description": "The role name",
        "type": "string"
      },
      "permissionPolicies": {
        "items": {
          "$ref": "#/definitions/DomainPermissionPolicy"
        },
        "type": "array",
        "uniqueItems": true
      },
      "permissions": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "roleNeedsUpdate": {
        "description": "Optional unless patch operation.",
        "type": "boolean"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "unusedPermissions": {
        "description": "A collection of the permissions the role is not using",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "type": "array",
        "uniqueItems": true
      },
      "userCount": {
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "DomainPermissionPolicy": {
    "properties": {
      "actionSet": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "allowConditions": {
        "type": "boolean"
      },
      "domain": {
        "type": "string"
      },
      "entityName": {
        "type": "string"
      },
      "namedResources": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "policyDescription": {
        "type": "string"
      },
      "policyName": {
        "type": "string"
      },
      "resourceConditionNode": {
        "$ref": "#/definitions/DomainResourceConditionNode"
      }
    },
    "type": "object"
  },
  "DynamicContactQueueingSettings": {
    "properties": {
      "filter": {
        "description": "Whether to filter contacts dynamically",
        "type": "boolean"
      },
      "sort": {
        "description": "Whether to sort contacts dynamically",
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "DynamicLineBalancingSettings": {
    "properties": {
      "enabled": {
        "description": "Indicates that this campaign is subject of dynamic line balancing",
        "type": "boolean"
      },
      "relativeWeight": {
        "description": "Relative weight of this campaign in dynamic line balancing",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "Edge": {
    "properties": {
      "apiVersion": {
        "type": "string"
      },
      "callDrainingState": {
        "description": "The current state of the Edge's call draining process before it can be safely rebooted or updated.",
        "enum": [
          "NONE",
          "WAIT",
          "WAIT_TIMEOUT",
          "TERMINATE",
          "COMPLETE"
        ],
        "readOnly": true,
        "type": "string"
      },
      "certType": {
        "description": "The type of certificate used to communicate with edge-proxy.",
        "enum": [
          "PureCloud",
          "Public",
          "China",
          "NotRequested"
        ],
        "type": "string"
      },
      "conversationCount": {
        "description": "The remaining number of conversations the Edge has to drain before it can be safely rebooted or updated. When an Edge is not draining conversations, this will be NULL or 0.",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "currentVersion": {
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "edgeDeploymentType": {
        "enum": [
          "HARDWARE",
          "LDM",
          "CDM",
          "CHS",
          "INVALID"
        ],
        "type": "string"
      },
      "edgeGroup": {
        "$ref": "#/definitions/EdgeGroup"
      },
      "fingerprint": {
        "type": "string"
      },
      "fingerprintHint": {
        "type": "string"
      },
      "fullSoftwareVersion": {
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "interfaces": {
        "description": "The list of interfaces for the edge. (Deprecated) Replaced by configuring trunks/ip info on the logical interface instead",
        "items": {
          "$ref": "#/definitions/EdgeInterface"
        },
        "type": "array"
      },
      "make": {
        "type": "string"
      },
      "managed": {
        "type": "boolean"
      },
      "model": {
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "offlineConfigCalled": {
        "description": "True if the offline edge configuration endpoint has been called for this edge.",
        "readOnly": true,
        "type": "boolean"
      },
      "onlineStatus": {
        "enum": [
          "ONLINE",
          "OFFLINE"
        ],
        "type": "string"
      },
      "osName": {
        "description": "The name provided by the operating system of the Edge.",
        "readOnly": true,
        "type": "string"
      },
      "pairingId": {
        "description": "The pairing Id for a hardware Edge in the format: 00000-00000-00000-00000-00000. This field is only required when creating an Edge with a deployment type of HARDWARE.",
        "type": "string"
      },
      "patch": {
        "type": "string"
      },
      "physicalEdge": {
        "type": "boolean"
      },
      "proxy": {
        "description": "Edge HTTP proxy configuration for the WAN port. The field can be a hostname, FQDN, IPv4 or IPv6 address. If port is not included, port 80 is assumed.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "serialNumber": {
        "type": "string"
      },
      "site": {
        "$ref": "#/definitions/Site",
        "description": "The Site to which the Edge is assigned."
      },
      "softwareStatus": {
        "$ref": "#/definitions/DomainEdgeSoftwareUpdateDto",
        "description": "Details about an in-progress or recently in-progress Edge software upgrade. This node appears only if a software upgrade was recently initiated for this Edge."
      },
      "softwareVersion": {
        "type": "string"
      },
      "softwareVersionConfiguration": {
        "type": "string"
      },
      "softwareVersionPlatform": {
        "type": "string"
      },
      "softwareVersionTimestamp": {
        "type": "string"
      },
      "stagedVersion": {
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "statusCode": {
        "description": "The current status of the Edge.",
        "enum": [
          "NEW",
          "AWAITING_CONNECTION",
          "AWAITING_FINGERPRINT",
          "AWAITING_FINGERPRINT_VERIFICATION",
          "FINGERPRINT_VERIFIED",
          "AWAITING_BOOTSTRAP",
          "ACTIVE",
          "INACTIVE",
          "RMA",
          "UNPAIRING",
          "UNPAIRED",
          "INITIALIZING"
        ],
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "EdgeAutoUpdateConfig": {
    "properties": {
      "end": {
        "description": "Date time is represented as an ISO-8601 string without a timezone. For example: yyyy-MM-ddTHH:mm:ss.SSS",
        "format": "local-date-time",
        "type": "string"
      },
      "rrule": {
        "description": "The recurrence rule for updating the Edges assigned to the site. The only supported frequencies are daily and weekly. Weekly frequencies require a day list with at least oneday specified. All other configurations are not supported.",
        "type": "string"
      },
      "start": {
        "description": "Date time is represented as an ISO-8601 string without a timezone. For example: yyyy-MM-ddTHH:mm:ss.SSS",
        "format": "local-date-time",
        "type": "string"
      },
      "timeZone": {
        "description": "The timezone of the window in which any updates to the edges assigned to the site can be applied. The minimum size of the window is 2 hours.",
        "type": "string"
      }
    },
    "required": [
      "end",
      "rrule",
      "start",
      "timeZone"
    ],
    "type": "object"
  },
  "EdgeGroup": {
    "properties": {
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "edgeTrunkBaseAssignment": {
        "$ref": "#/definitions/TrunkBaseAssignment",
        "description": "A trunk base settings assignment of trunkType \"EDGE\" to use for edge-to-edge communication."
      },
      "hybrid": {
        "description": "Is this edge group hybrid.",
        "type": "boolean"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "managed": {
        "description": "Is this edge group being managed remotely.",
        "type": "boolean"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "phoneTrunkBases": {
        "description": "Trunk base settings of trunkType \"PHONE\" to inherit to edge logical interface for phone communication.",
        "items": {
          "$ref": "#/definitions/TrunkBase"
        },
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "edgeTrunkBaseAssignment",
      "name",
      "phoneTrunkBases"
    ],
    "type": "object"
  },
  "EmailAddress": {
    "properties": {
      "email": {
        "type": "string"
      },
      "name": {
        "type": "string"
      }
    },
    "type": "object"
  },
  "EmailColumn": {
    "properties": {
      "columnName": {
        "description": "The name of the email column.",
        "type": "string"
      },
      "contactableTimeColumn": {
        "description": "A column that indicates the timezone to use for a given contact when checking contactable times.",
        "type": "string"
      },
      "type": {
        "description": "Indicates the type of the email column. For example, 'work' or 'personal'.",
        "type": "string"
      }
    },
    "required": [
      "columnName",
      "type"
    ],
    "type": "object"
  },
  "EmergencyCallFlow": {
    "description": "An emergency flow associates a call flow to use in an emergency with the ivr(s) to route to it.",
    "properties": {
      "emergencyFlow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The call flow to execute in an emergency."
      },
      "ivrs": {
        "description": "The IVR(s) to route to the call flow during an emergency.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "EmergencyGroup": {
    "description": "A group of emergency call flows to use in an emergency.",
    "properties": {
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "emergencyCallFlows": {
        "description": "The emergency call flow(s) to use during an emergency.",
        "items": {
          "$ref": "#/definitions/EmergencyCallFlow"
        },
        "type": "array"
      },
      "enabled": {
        "description": "True if an emergency is occurring and the associated emergency call flow(s) should be used.  False otherwise.",
        "type": "boolean"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "EventSetting": {
    "properties": {
      "typing": {
        "$ref": "#/definitions/TypingSetting",
        "description": "Settings regarding typing events"
      }
    },
    "type": "object"
  },
  "ExtensionPool": {
    "properties": {
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "endNumber": {
        "description": "The ending phone number for the range of this Extension pool. The number must be between 3 and 9 digits in length and the same length as the startNumber.",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "startNumber": {
        "description": "The starting phone number for the range of this Extension pool. The number must be between 3 and 9 digits in length and the same length as the endNumber.",
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "ExternalContact": {
    "properties": {
      "address": {
        "$ref": "#/definitions/ContactAddress"
      },
      "canonicalContact": {
        "$ref": "#/definitions/ContactAddressableEntityRef",
        "description": "The contact at the head of the merge tree. If null, this contact is not a part of any merge.",
        "readOnly": true
      },
      "cellPhone": {
        "$ref": "#/definitions/PhoneNumber"
      },
      "createDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "customFields": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Custom fields defined in the schema referenced by schemaId and schemaVersion.",
        "type": "object"
      },
      "externalDataSources": {
        "description": "Links to the sources of data (e.g. one source might be a CRM) that contributed data to this record.  Read-only, and only populated when requested via expand param.",
        "items": {
          "$ref": "#/definitions/ExternalDataSource"
        },
        "readOnly": true,
        "type": "array"
      },
      "externalIds": {
        "description": "A list of external identifiers that identify this contact in an external system",
        "items": {
          "$ref": "#/definitions/ExternalId"
        },
        "type": "array",
        "uniqueItems": true
      },
      "externalOrganization": {
        "$ref": "#/definitions/ExternalOrganization"
      },
      "externalSystemUrl": {
        "description": "A string that identifies an external system-of-record resource that may have more detailed information on the contact. It should be a valid URL (including the http/https protocol, port, and path [if any]). The value is automatically trimmed of any leading and trailing whitespace.",
        "type": "string"
      },
      "facebookId": {
        "$ref": "#/definitions/FacebookId"
      },
      "firstName": {
        "description": "The first name of the contact.",
        "type": "string"
      },
      "homePhone": {
        "$ref": "#/definitions/PhoneNumber"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "type": "string"
      },
      "lastName": {
        "description": "The last name of the contact.",
        "type": "string"
      },
      "lineId": {
        "$ref": "#/definitions/LineId"
      },
      "mergeOperation": {
        "$ref": "#/definitions/MergeOperation",
        "description": "Information about the merge history of this contact. If null, this contact is not a part of any merge.",
        "readOnly": true
      },
      "mergeSet": {
        "description": "The set of all contacts that are a part of the merge tree. If null, this contact is not a part of any merge.",
        "items": {
          "$ref": "#/definitions/ContactAddressableEntityRef"
        },
        "readOnly": true,
        "type": "array"
      },
      "middleName": {
        "type": "string"
      },
      "modifyDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "otherEmail": {
        "type": "string"
      },
      "otherPhone": {
        "$ref": "#/definitions/PhoneNumber"
      },
      "personalEmail": {
        "type": "string"
      },
      "salutation": {
        "type": "string"
      },
      "schema": {
        "$ref": "#/definitions/DataSchema",
        "description": "The schema defining custom fields for this contact"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "surveyOptOut": {
        "type": "boolean"
      },
      "title": {
        "type": "string"
      },
      "twitterId": {
        "$ref": "#/definitions/TwitterId"
      },
      "type": {
        "description": "The type of contact",
        "enum": [
          "Ephemeral",
          "Identified",
          "Curated"
        ],
        "readOnly": true,
        "type": "string"
      },
      "whatsAppId": {
        "$ref": "#/definitions/WhatsAppId"
      },
      "workEmail": {
        "type": "string"
      },
      "workPhone": {
        "$ref": "#/definitions/PhoneNumber"
      }
    },
    "type": "object"
  },
  "ExternalDataSource": {
    "description": "Describes a link to a record in an external system that contributed data to a Relate record",
    "properties": {
      "platform": {
        "description": "The platform that was the source of the data.  Example: a CRM like SALESFORCE.",
        "enum": [
          "SALESFORCE"
        ],
        "type": "string"
      },
      "url": {
        "description": "An URL that links to the source record that contributed data to the associated entity.",
        "type": "string"
      }
    },
    "type": "object"
  },
  "ExternalId": {
    "properties": {
      "externalSource": {
        "$ref": "#/definitions/ExternalSource"
      },
      "value": {
        "type": "string"
      }
    },
    "type": "object"
  },
  "ExternalMetricDefinitionCreateRequest": {
    "properties": {
      "defaultObjectiveType": {
        "description": "The default objective type of the External Metric Definition",
        "enum": [
          "HigherIsBetter",
          "LowerIsBetter",
          "TargetArea"
        ],
        "type": "string"
      },
      "enabled": {
        "description": "True if the External Metric Definition is enabled",
        "type": "boolean"
      },
      "name": {
        "description": "The name of the External Metric Definition",
        "type": "string"
      },
      "precision": {
        "description": "The decimal precision of the External Metric Definition. Must be at least 0 and at most 5",
        "format": "int32",
        "maximum": 5,
        "minimum": 0,
        "type": "integer"
      },
      "unit": {
        "description": "The unit of the External Metric Definition",
        "enum": [
          "Seconds",
          "Percent",
          "Number",
          "Currency"
        ],
        "type": "string"
      },
      "unitDefinition": {
        "description": "The unit definition of the External Metric Definition",
        "type": "string"
      }
    },
    "required": [
      "defaultObjectiveType",
      "enabled",
      "name",
      "precision",
      "unit"
    ],
    "type": "object"
  },
  "ExternalOrganization": {
    "properties": {
      "address": {
        "$ref": "#/definitions/ContactAddress"
      },
      "companyType": {
        "type": "string"
      },
      "createDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "customFields": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Custom fields defined in the schema referenced by schemaId and schemaVersion.",
        "type": "object"
      },
      "employeeCount": {
        "format": "int64",
        "type": "integer"
      },
      "externalDataSources": {
        "description": "Links to the sources of data (e.g. one source might be a CRM) that contributed data to this record.  Read-only, and only populated when requested via expand param.",
        "items": {
          "$ref": "#/definitions/ExternalDataSource"
        },
        "readOnly": true,
        "type": "array"
      },
      "externalSystemUrl": {
        "description": "A string that identifies an external system-of-record resource that may have more detailed information on the organization. It should be a valid URL (including the http/https protocol, port, and path [if any]). The value is automatically trimmed of any leading and trailing whitespace.",
        "type": "string"
      },
      "faxNumber": {
        "$ref": "#/definitions/PhoneNumber"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "type": "string"
      },
      "industry": {
        "type": "string"
      },
      "modifyDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "name": {
        "description": "The name of the company.",
        "type": "string"
      },
      "phoneNumber": {
        "$ref": "#/definitions/PhoneNumber"
      },
      "primaryContactId": {
        "type": "string"
      },
      "revenue": {
        "format": "int64",
        "type": "integer"
      },
      "schema": {
        "$ref": "#/definitions/DataSchema",
        "description": "The schema defining custom fields for this contact"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "tags": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "tickers": {
        "items": {
          "$ref": "#/definitions/Ticker"
        },
        "type": "array"
      },
      "trustor": {
        "$ref": "#/definitions/Trustor"
      },
      "twitterId": {
        "$ref": "#/definitions/TwitterId"
      },
      "websites": {
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "FacebookId": {
    "description": "User information for a Facebook user interacting with a page or app",
    "properties": {
      "displayName": {
        "description": "The displayName of this person's Facebook account. Roughly translates to user.first_name + ' ' + user.last_name in the Facebook API.",
        "type": "string"
      },
      "ids": {
        "description": "The set of scopedIds that this person has. Each scopedId is specific to a page or app that the user interacts with.",
        "items": {
          "$ref": "#/definitions/FacebookScopedId"
        },
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "FacebookIntegrationRequest": {
    "properties": {
      "appId": {
        "description": "The app Id of Facebook app. The appId is required when a customer wants to use their own approved Facebook app.",
        "type": "string"
      },
      "appSecret": {
        "description": "The app Secret of Facebook app. The appSecret is required when appId is provided.",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "messagingSetting": {
        "$ref": "#/definitions/MessagingSettingRequestReference",
        "description": "Defines the message settings to be applied for this integration"
      },
      "name": {
        "description": "The name of the Facebook Integration",
        "type": "string"
      },
      "pageAccessToken": {
        "description": "The long-lived Page Access Token of Facebook page. \nSee https://developers.facebook.com/docs/facebook-login/access-tokens. \nWhen a pageAccessToken is provided, pageId and userAccessToken are not required.",
        "type": "string"
      },
      "pageId": {
        "description": "The page Id of Facebook page. The pageId is required when userAccessToken is provided.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "supportedContent": {
        "$ref": "#/definitions/SupportedContentReference",
        "description": "Defines the SupportedContent profile configured for an integration"
      },
      "userAccessToken": {
        "description": "The short-lived User Access Token of the Facebook user logged into the Facebook app. \nSee https://developers.facebook.com/docs/facebook-login/access-tokens. \nWhen userAccessToken is provided, pageId is mandatory. \nWhen userAccessToken/pageId combination is provided, pageAccessToken is not required.",
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "FileSpecificationTemplate": {
    "properties": {
      "columnInformation": {
        "description": "Columns specification",
        "items": {
          "$ref": "#/definitions/Column"
        },
        "type": "array"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "delimiter": {
        "description": "Kind of delimiter",
        "enum": [
          "Comma",
          "Pipe",
          "Colon",
          "Tab",
          "Semicolon",
          "Custom"
        ],
        "type": "string"
      },
      "delimiterValue": {
        "description": "Delimiter character, used only when delimiter=\"Custom\"",
        "type": "string"
      },
      "description": {
        "description": "Description of the file specification template",
        "type": "string"
      },
      "format": {
        "description": "File format",
        "enum": [
          "FixedLength",
          "Delimited"
        ],
        "type": "string"
      },
      "header": {
        "description": "If true indicates that delimited file has a header row, which can provide column names",
        "type": "boolean"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the File Specification template.",
        "type": "string"
      },
      "numberOfHeadingLinesSkipped": {
        "description": "Number of heading lines to be skipped",
        "format": "int32",
        "type": "integer"
      },
      "numberOfTrailingLinesSkipped": {
        "description": "Number of trailing lines to be skipped",
        "format": "int32",
        "type": "integer"
      },
      "preprocessingRules": {
        "description": "Preprocessing rules",
        "items": {
          "$ref": "#/definitions/PreprocessingRule"
        },
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "format",
      "name"
    ],
    "type": "object"
  },
  "FlowLogLevel": {
    "description": "This is a table of settings per a loglevel that define what will be logged in executionData when enabled (true)",
    "properties": {
      "characteristics": {
        "$ref": "#/definitions/FlowCharacteristics",
        "description": "Shows what characteristics are enabled for this log level"
      },
      "level": {
        "description": "The logLevel for this characteristics set",
        "enum": [
          "Unknown",
          "Disabled",
          "Base",
          "Notes",
          "VerboseNotes",
          "All"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "FlowLogLevelRequest": {
    "description": "Used to set the log level of a particular flow",
    "properties": {
      "logLevelCharacteristics": {
        "$ref": "#/definitions/FlowLogLevel",
        "description": "The log level characteristics currently set for this flow"
      }
    },
    "required": [
      "logLevelCharacteristics"
    ],
    "type": "object"
  },
  "FlowMilestone": {
    "properties": {
      "description": {
        "description": "The flow milestone description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The flow milestone identifier",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The flow milestone name.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "FlowOutcome": {
    "properties": {
      "currentOperation": {
        "$ref": "#/definitions/Operation"
      },
      "description": {
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The flow outcome identifier",
        "type": "string"
      },
      "name": {
        "description": "The flow outcome name.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "FooterTemplate": {
    "description": "The Footer template identifies the Footer type and its footerUsage",
    "properties": {
      "applicableResources": {
        "description": "Specifies the canned response template where the footer can be used.",
        "items": {
          "enum": [
            "Campaign"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "type": {
        "description": "Specifies the type represented by Footer.",
        "enum": [
          "Signature"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "Grammar": {
    "properties": {
      "description": {
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "languages": {
        "description": "List of languages configured for this grammar",
        "items": {
          "$ref": "#/definitions/GrammarLanguage"
        },
        "readOnly": true,
        "type": "array"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "GrammarLanguage": {
    "properties": {
      "dtmfFileMetadata": {
        "$ref": "#/definitions/GrammarLanguageFileMetadata",
        "description": "Additional information about the associated dtmf file"
      },
      "dtmfFileUrl": {
        "description": "The URL to the DTMF mode file associated with this grammar language",
        "readOnly": true,
        "type": "string"
      },
      "grammarId": {
        "description": "The ID of the grammar associated with this grammar language",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "language": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "voiceFileMetadata": {
        "$ref": "#/definitions/GrammarLanguageFileMetadata",
        "description": "Additional information about the associated voice file"
      },
      "voiceFileUrl": {
        "description": "The URL to the voice mode file associated with this grammar language",
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "GrammarLanguageFileMetadata": {
    "properties": {
      "dateUploaded": {
        "description": "The date the file was uploaded. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "fileName": {
        "description": "The name of the file as defined by the user",
        "type": "string"
      },
      "fileSizeBytes": {
        "description": "The size of the file in bytes",
        "format": "int32",
        "type": "integer"
      },
      "fileType": {
        "description": "The extension of the file",
        "enum": [
          "Gram",
          "Grxml"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "GroupContact": {
    "properties": {
      "address": {
        "description": "Phone number for this contact type",
        "type": "string"
      },
      "display": {
        "description": "Formatted version of the address property",
        "readOnly": true,
        "type": "string"
      },
      "extension": {
        "description": "Extension is set if the number is e164 valid",
        "type": "string"
      },
      "mediaType": {
        "description": "Media type of the address",
        "enum": [
          "PHONE"
        ],
        "type": "string"
      },
      "type": {
        "description": "Contact type of the address",
        "enum": [
          "GROUPRING",
          "GROUPPHONE"
        ],
        "type": "string"
      }
    },
    "required": [
      "address",
      "mediaType",
      "type"
    ],
    "type": "object"
  },
  "GroupCreate": {
    "properties": {
      "addresses": {
        "items": {
          "$ref": "#/definitions/GroupContact"
        },
        "type": "array"
      },
      "callsEnabled": {
        "description": "Allow calls to be placed to this group.",
        "type": "boolean"
      },
      "dateModified": {
        "description": "Last modified date/time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "images": {
        "items": {
          "$ref": "#/definitions/Image"
        },
        "type": "array"
      },
      "includeOwners": {
        "description": "Allow owners to be included as members of the group",
        "type": "boolean"
      },
      "memberCount": {
        "description": "Number of members.",
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      },
      "name": {
        "description": "The group name.",
        "type": "string"
      },
      "ownerIds": {
        "description": "Owners of the group",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "rolesEnabled": {
        "description": "Allow roles to be assigned to this group",
        "type": "boolean"
      },
      "rulesVisible": {
        "description": "Are membership rules visible to the person requesting to view the group",
        "type": "boolean"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Active, inactive, or deleted state.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "type": {
        "description": "Type of group.",
        "enum": [
          "official",
          "social"
        ],
        "type": "string"
      },
      "version": {
        "description": "Current version for this resource.",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "visibility": {
        "description": "Who can view this group",
        "enum": [
          "public",
          "owners",
          "members"
        ],
        "type": "string"
      }
    },
    "required": [
      "name",
      "rulesVisible",
      "type",
      "visibility"
    ],
    "type": "object"
  },
  "IVR": {
    "description": "Defines the phone numbers, operating hours, and the Architect flows to execute for an IVR.",
    "properties": {
      "closedHoursFlow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The Architect flow to execute during the hours an organization is closed."
      },
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "dnis": {
        "description": "The phone number(s) to contact the IVR by.  Each phone number must be unique and not in use by another resource.  For example, a user and an iVR cannot have the same phone number.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "holidayHoursFlow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The Architect flow to execute during an organization's holiday hours."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "openHoursFlow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The Architect flow to execute during the hours an organization is open."
      },
      "scheduleGroup": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The schedule group defining the open and closed hours for an organization.  If this is provided, an open flow and a closed flow must be specified as well."
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "Image": {
    "properties": {
      "imageUri": {
        "type": "string"
      },
      "resolution": {
        "description": "Height and/or width of image. ex: 640x480 or x128",
        "type": "string"
      }
    },
    "type": "object"
  },
  "ImportStatus": {
    "properties": {
      "completedRecords": {
        "description": "number of records finished importing",
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      },
      "failureReason": {
        "description": "if the import has failed, the reason for the failure",
        "readOnly": true,
        "type": "string"
      },
      "listNamePrefix": {
        "description": "The prefix for the contact list name",
        "readOnly": true,
        "type": "string"
      },
      "percentComplete": {
        "description": "percentage of records finished importing",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "state": {
        "description": "current status of the import",
        "enum": [
          "IN_PROGRESS",
          "FAILED"
        ],
        "readOnly": true,
        "type": "string"
      },
      "targetContactListIds": {
        "description": "The contact list Ids for target contact lists.",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "type": "array"
      },
      "totalRecords": {
        "description": "total number of records to be imported",
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      }
    },
    "required": [
      "completedRecords",
      "percentComplete",
      "state",
      "totalRecords"
    ],
    "type": "object"
  },
  "InboundDomain": {
    "properties": {
      "customSMTPServer": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The custom SMTP server integration to use when sending outbound emails from this domain."
      },
      "id": {
        "description": "Unique Id of the domain such as: example.com",
        "type": "string"
      },
      "mailFromSettings": {
        "$ref": "#/definitions/MailFromResult",
        "description": "The DNS settings if the inbound domain is using a custom Mail From. These settings can only be used on InboundDomains where subDomain is false."
      },
      "mxRecordStatus": {
        "description": "Mx Record Status",
        "enum": [
          "VALID",
          "INVALID",
          "NOT_AVAILABLE"
        ],
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "subDomain": {
        "description": "Indicates if this a PureCloud sub-domain.  If true, then the appropriate DNS records are created for sending/receiving email.",
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "InboundRoute": {
    "properties": {
      "allowMultipleActions": {
        "description": "Control if multiple actions are allowed on this route. When true the disconnect has to be done manually. When false a conversation will be disconnected by the system after every action",
        "type": "boolean"
      },
      "autoBcc": {
        "description": "The recipients that should be automatically blind copied on outbound emails associated with this InboundRoute.",
        "items": {
          "$ref": "#/definitions/EmailAddress"
        },
        "type": "array"
      },
      "flow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The flow to use for processing the email."
      },
      "fromEmail": {
        "description": "The sender email to use for outgoing replies.",
        "type": "string"
      },
      "fromName": {
        "description": "The sender name to use for outgoing replies.",
        "type": "string"
      },
      "historyInclusion": {
        "description": "The configuration to indicate how the history of a conversation has to be included in a draft",
        "enum": [
          "Include",
          "Exclude",
          "Optional"
        ],
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "language": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The language to use for routing."
      },
      "name": {
        "type": "string"
      },
      "pattern": {
        "description": "The search pattern that the mailbox name should match.",
        "type": "string"
      },
      "priority": {
        "description": "The priority to use for routing.",
        "format": "int32",
        "type": "integer"
      },
      "queue": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The queue to route the emails to."
      },
      "replyEmailAddress": {
        "$ref": "#/definitions/QueueEmailAddress",
        "description": "The route to use for email replies."
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "signature": {
        "$ref": "#/definitions/Signature",
        "description": "The configuration for the canned response signature that will be appended to outbound emails sent via this route"
      },
      "skills": {
        "description": "The skills to use for routing.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "spamFlow": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The flow to use for processing inbound emails that have been marked as spam."
      }
    },
    "required": [
      "fromName",
      "pattern"
    ],
    "type": "object"
  },
  "InstagramIntegrationRequest": {
    "properties": {
      "appId": {
        "description": "The app ID of Facebook app. The appId is required when a customer wants to use their own approved Facebook app.",
        "type": "string"
      },
      "appSecret": {
        "description": "The app Secret of Facebook app. The appSecret is required when appId is provided.",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "messagingSetting": {
        "$ref": "#/definitions/MessagingSettingRequestReference",
        "description": "Defines the message settings to be applied for this integration"
      },
      "name": {
        "description": "The name of the Instagram Integration",
        "type": "string"
      },
      "pageAccessToken": {
        "description": "The long-lived Page Access Token of Instagram page. \nSee https://developers.facebook.com/docs/facebook-login/access-tokens. \nWhen a pageAccessToken is provided, pageId and userAccessToken are not required.",
        "type": "string"
      },
      "pageId": {
        "description": "The page ID of Instagram page. The pageId is required when userAccessToken is provided.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "supportedContent": {
        "$ref": "#/definitions/SupportedContentReference",
        "description": "Defines the SupportedContent profile configured for an integration"
      },
      "userAccessToken": {
        "description": "The short-lived User Access Token of Instagram user logged into Facebook app. \nSee https://developers.facebook.com/docs/facebook-login/access-tokens. \nWhen userAccessToken is provided, pageId is mandatory. \nWhen userAccessToken/pageId combination is provided, pageAccessToken is not required.",
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "IntegrationType": {
    "description": "Descriptor for a type of Integration.",
    "properties": {
      "category": {
        "description": "Category describing the integration type.",
        "readOnly": true,
        "type": "string"
      },
      "configAdvancedSchemaUri": {
        "description": "URI of the schema describing the advanced JSON document needed to configure an integration of this type.",
        "readOnly": true,
        "type": "string"
      },
      "configPropertiesSchemaUri": {
        "description": "URI of the schema describing the key-value properties needed to configure an integration of this type.",
        "readOnly": true,
        "type": "string"
      },
      "credentials": {
        "additionalProperties": {
          "$ref": "#/definitions/CredentialSpecification"
        },
        "description": "Map of credentials for integrations of this type. The key is the name of a credential that can be provided in the credentials property of the integration configuration.",
        "readOnly": true,
        "type": "object"
      },
      "description": {
        "description": "Description of the integration type.",
        "readOnly": true,
        "type": "string"
      },
      "faqUri": {
        "description": "URI of frequently asked questions about the integration type",
        "readOnly": true,
        "type": "string"
      },
      "helpLinks": {
        "description": "List of links to additional help resources",
        "items": {
          "$ref": "#/definitions/HelpLink"
        },
        "readOnly": true,
        "type": "array"
      },
      "helpUri": {
        "description": "URI of a page with more information about the integration type",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The ID of the integration type.",
        "type": "string"
      },
      "images": {
        "description": "Collection of logos.",
        "items": {
          "$ref": "#/definitions/Image"
        },
        "readOnly": true,
        "type": "array"
      },
      "marketplaceUri": {
        "description": "URI of the marketplace listing for this integration type",
        "readOnly": true,
        "type": "string"
      },
      "maxInstances": {
        "description": "The maximum number of integration instances allowable for this integration type",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "name": {
        "type": "string"
      },
      "nonInstallable": {
        "description": "Indicates if the integration type is installable or not.",
        "readOnly": true,
        "type": "boolean"
      },
      "privacyPolicyUri": {
        "description": "URI of a privacy policy for users of the integration type",
        "readOnly": true,
        "type": "string"
      },
      "provider": {
        "description": "PureCloud provider of the integration type.",
        "readOnly": true,
        "type": "string"
      },
      "salesContactUri": {
        "description": "URI for vendor sales information",
        "readOnly": true,
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "supportContactUri": {
        "description": "URI for vendor support",
        "readOnly": true,
        "type": "string"
      },
      "termsOfServiceUri": {
        "description": "URI of a page with terms and conditions for the integration type",
        "readOnly": true,
        "type": "string"
      },
      "userPermissions": {
        "description": "List of permissions required to permit user access to the integration type.",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "type": "array"
      },
      "vendorName": {
        "description": "Name of the vendor of this integration type",
        "readOnly": true,
        "type": "string"
      },
      "vendorOAuthClientIds": {
        "description": "List of OAuth Client IDs that must be authorized when the integration is created.",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "type": "array"
      },
      "vendorWebsiteUri": {
        "description": "URI of the vendor's website",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "id"
    ],
    "type": "object"
  },
  "JourneyEventsSettings": {
    "description": "Settings concerning journey events",
    "properties": {
      "clickEvents": {
        "description": "Tracks when and where a visitor clicks on a webpage.",
        "items": {
          "$ref": "#/definitions/SelectorEventTrigger"
        },
        "type": "array"
      },
      "enabled": {
        "description": "Whether or not journey event collection is enabled.",
        "type": "boolean"
      },
      "excludedQueryParameters": {
        "description": "List of parameters to be excluded from the query string.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "formsTrackEvents": {
        "description": "Controls how the form submitted and form abandoned events are tracked after a visitor interacts with a form element.",
        "items": {
          "$ref": "#/definitions/FormsTrackTrigger"
        },
        "type": "array"
      },
      "idleEvents": {
        "description": "Tracks when and where a visitor becomes inactive on a webpage.",
        "items": {
          "$ref": "#/definitions/IdleEventTrigger"
        },
        "type": "array"
      },
      "inViewportEvents": {
        "description": "Tracks when elements become visible or hidden on screen.",
        "items": {
          "$ref": "#/definitions/SelectorEventTrigger"
        },
        "type": "array"
      },
      "pageviewConfig": {
        "description": "Controls how the pageview events are tracked.",
        "enum": [
          "Auto",
          "Once",
          "Off"
        ],
        "type": "string"
      },
      "scrollDepthEvents": {
        "description": "Tracks when a visitor scrolls to a specific percentage of a webpage.",
        "items": {
          "$ref": "#/definitions/ScrollPercentageEventTrigger"
        },
        "type": "array"
      },
      "searchQueryParameters": {
        "description": "List of query parameters used for search (e.g. 'q').",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "shouldKeepUrlFragment": {
        "description": "Whether or not to keep the URL fragment.",
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "JourneyView": {
    "description": "A journey view",
    "properties": {
      "charts": {
        "description": "A list of charts to measure within context of the elements of the the journey view",
        "items": {
          "$ref": "#/definitions/JourneyViewChart"
        },
        "type": "array"
      },
      "createdBy": {
        "$ref": "#/definitions/JourneyViewUser",
        "description": "User that has created the view.",
        "readOnly": true
      },
      "dateCreated": {
        "description": "The date when the journey view was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date when this version of the journey view was modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "A description of the journey view",
        "type": "string"
      },
      "duration": {
        "description": "A relative timeframe for the journey view, expressed as an ISO 8601 duration. Only one of interval or duration must be specified. Periods are represented as an ISO-8601 string. For example: P1D or P1DT12H",
        "type": "string"
      },
      "elements": {
        "description": "The elements within the journey view",
        "items": {
          "$ref": "#/definitions/JourneyViewElement"
        },
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "interval": {
        "description": "An absolute timeframe for the journey view, expressed as an ISO 8601 interval. Only one of interval or duration must be specified. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss",
        "type": "string"
      },
      "modifiedBy": {
        "$ref": "#/definitions/JourneyViewUser",
        "description": "User that has modified the view.",
        "readOnly": true
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The version of the journey view",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      }
    },
    "required": [
      "elements"
    ],
    "type": "object"
  },
  "JourneyViewChart": {
    "description": "A chart within the context of the elements of the the journey view",
    "properties": {
      "displayAttributes": {
        "$ref": "#/definitions/JourneyViewChartDisplayAttributes",
        "description": "Optional display attributes for rendering the chart"
      },
      "groupByAttributes": {
        "description": "A list of attributes to group the metrics by. There is a limit on the number of groupBy properties which can be specified.",
        "items": {
          "$ref": "#/definitions/JourneyViewChartGroupByAttribute"
        },
        "type": "array"
      },
      "groupByMax": {
        "description": "A maximum on the number of values being grouped by",
        "format": "int32",
        "type": "integer"
      },
      "groupByTime": {
        "description": "A time unit to group the metrics by. There is a limit on the number of groupBy properties which can be specified.",
        "enum": [
          "Day",
          "Week",
          "Month",
          "Year"
        ],
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "metrics": {
        "description": "A list of metrics to calculate within the chart by (aka the y axis)",
        "items": {
          "$ref": "#/definitions/JourneyViewChartMetric"
        },
        "type": "array"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The version of the journey view chart",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      }
    },
    "required": [
      "metrics"
    ],
    "type": "object"
  },
  "JourneyViewElement": {
    "description": "An element within a journey view",
    "properties": {
      "attributes": {
        "$ref": "#/definitions/JourneyViewElementAttributes",
        "description": "Required attributes of the element"
      },
      "filter": {
        "$ref": "#/definitions/JourneyViewElementFilter",
        "description": "Any filters applied to this element"
      },
      "followedBy": {
        "description": "A list of JourneyViewLink objects, listing the elements downstream of this element",
        "items": {
          "$ref": "#/definitions/JourneyViewLink"
        },
        "type": "array"
      },
      "id": {
        "description": "The unique identifier of the element within the elements list",
        "type": "string"
      },
      "name": {
        "description": "The unique name of the element within the view",
        "type": "string"
      }
    },
    "required": [
      "attributes",
      "id",
      "name"
    ],
    "type": "object"
  },
  "JourneyViewUser": {
    "properties": {
      "emailAddress": {
        "description": "Email address of the user",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "JsonSchemaDocument": {
    "description": "A JSON Schema document.",
    "properties": {
      "$schema": {
        "type": "string"
      },
      "additionalProperties": {
        "type": "object"
      },
      "description": {
        "type": "string"
      },
      "id": {
        "type": "string"
      },
      "properties": {
        "additionalProperties": {
          "type": "object"
        },
        "type": "object"
      },
      "required": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "title": {
        "type": "string"
      },
      "type": {
        "type": "string"
      }
    },
    "type": "object"
  },
  "KnowledgeDocumentAlternative": {
    "properties": {
      "autocomplete": {
        "description": "Autocomplete enabled for the alternate phrase.",
        "type": "boolean"
      },
      "phrase": {
        "description": "Alternate phrasing to the document title, having a limit of 500 words.",
        "type": "string"
      }
    },
    "required": [
      "autocomplete",
      "phrase"
    ],
    "type": "object"
  },
  "KnowledgeDocumentReq": {
    "properties": {
      "alternatives": {
        "description": "List of alternate phrases related to the title which improves search results.",
        "items": {
          "$ref": "#/definitions/KnowledgeDocumentAlternative"
        },
        "type": "array"
      },
      "categoryId": {
        "description": "The category associated with the document.",
        "type": "string"
      },
      "externalId": {
        "description": "The external id associated with the document.",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "labelIds": {
        "description": "The ids of labels associated with the document.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "title": {
        "description": "Document title.",
        "type": "string"
      },
      "visible": {
        "description": "Indicates if the knowledge document should be included in search results.",
        "type": "boolean"
      }
    },
    "required": [
      "title"
    ],
    "type": "object"
  },
  "LabelUtilizationRequest": {
    "properties": {
      "interruptingLabelIds": {
        "description": "Defines other labels that can interrupt an interaction with this label.",
        "items": {
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "maximumCapacity": {
        "description": "Defines the maximum number of interactions with this label that an agent can handle at one time.",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "Language": {
    "properties": {
      "dateModified": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The language name.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "type": "string"
      },
      "version": {
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "Library": {
    "properties": {
      "createdBy": {
        "$ref": "#/definitions/User",
        "description": "User that created the library.",
        "readOnly": true
      },
      "dateCreated": {
        "description": "The date and time the response was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The library name.",
        "type": "string"
      },
      "responseType": {
        "description": "This value is deprecated. Responses representing message templates may be added to any library.",
        "enum": [
          "MessagingTemplate",
          "CampaignSmsTemplate",
          "CampaignEmailTemplate",
          "Footer"
        ],
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Current version for this resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "Line": {
    "properties": {
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "defaultForUser": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "edgeGroup": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The edge group associated with the line. (Deprecated)"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "lineBaseSettings": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "loggedInUser": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "primaryEdge": {
        "$ref": "#/definitions/Edge",
        "description": "The primary edge associated to the line. (Deprecated)"
      },
      "properties": {
        "additionalProperties": {
          "type": "object"
        },
        "type": "object"
      },
      "secondaryEdge": {
        "$ref": "#/definitions/Edge",
        "description": "The secondary edge associated to the line. (Deprecated)"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "site": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "template": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "LineBase": {
    "properties": {
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "lineMetaBase": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "properties": {
        "additionalProperties": {
          "type": "object"
        },
        "type": "object"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "LineId": {
    "description": "User information for a Line account",
    "properties": {
      "displayName": {
        "description": "The displayName of this person's account in Line",
        "type": "string"
      },
      "ids": {
        "description": "The set of Line userIds that this person has. Each userId is specific to the Line channel that the user interacts with.",
        "items": {
          "$ref": "#/definitions/LineUserId"
        },
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "LocationAddress": {
    "properties": {
      "city": {
        "type": "string"
      },
      "country": {
        "type": "string"
      },
      "countryName": {
        "type": "string"
      },
      "state": {
        "type": "string"
      },
      "street1": {
        "type": "string"
      },
      "street2": {
        "type": "string"
      },
      "zipcode": {
        "type": "string"
      }
    },
    "type": "object"
  },
  "LocationCreateDefinition": {
    "properties": {
      "address": {
        "$ref": "#/definitions/LocationAddress",
        "description": "Address of the location"
      },
      "contactUser": {
        "description": "The user id of the location contact",
        "type": "string"
      },
      "emergencyNumber": {
        "$ref": "#/definitions/LocationEmergencyNumber",
        "description": "Emergency number for the location"
      },
      "name": {
        "description": "The name of the Location. Required for creates, not required for updates",
        "type": "string"
      },
      "notes": {
        "description": "Notes for the location",
        "type": "string"
      },
      "path": {
        "description": "A list of ancestor ids",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "state": {
        "description": "Current activity status of the location.",
        "enum": [
          "active",
          "deleted"
        ],
        "type": "string"
      },
      "version": {
        "description": "Current version of the location",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "LocationDefinition": {
    "properties": {
      "address": {
        "$ref": "#/definitions/LocationAddress"
      },
      "addressStored": {
        "description": "Boolean field which states if the address has been stored for E911",
        "readOnly": true,
        "type": "boolean"
      },
      "addressVerificationDetails": {
        "$ref": "#/definitions/LocationAddressVerificationDetails",
        "description": "Address verification information, retrieve dwith the ?expand=addressVerificationDetails query parameter",
        "readOnly": true
      },
      "addressVerified": {
        "description": "Boolean field which states if the address has been verified as an actual address",
        "readOnly": true,
        "type": "boolean"
      },
      "contactUser": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "Site contact for the location entity"
      },
      "emergencyNumber": {
        "$ref": "#/definitions/LocationEmergencyNumber",
        "description": "Emergency number for the location entity"
      },
      "floorplanImage": {
        "description": "Floorplan images of the location entity, retrieved with ?expand=images query parameter",
        "items": {
          "$ref": "#/definitions/LocationImage"
        },
        "readOnly": true,
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "images": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "notes": {
        "description": "Notes for the location entity",
        "type": "string"
      },
      "path": {
        "description": "A list of ancestor IDs in order",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "type": "array"
      },
      "profileImage": {
        "description": "Profile image of the location entity, retrieved with ?expand=images query parameter",
        "items": {
          "$ref": "#/definitions/LocationImage"
        },
        "readOnly": true,
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Current state of the location entity",
        "enum": [
          "active",
          "deleted"
        ],
        "type": "string"
      },
      "version": {
        "description": "Current version of the location entity, value to be supplied should be retrieved by a GET or on create/update response",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "LocationEmergencyNumber": {
    "properties": {
      "e164": {
        "type": "string"
      },
      "number": {
        "type": "string"
      },
      "type": {
        "description": "The type of emergency number.",
        "enum": [
          "default",
          "elin"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "MailFromResult": {
    "properties": {
      "mailFromDomain": {
        "description": "The custom MAIL FROM domain.",
        "type": "string"
      },
      "records": {
        "description": "The list of DNS records that pertain that need to exist for verification.",
        "items": {
          "$ref": "#/definitions/Record"
        },
        "type": "array"
      },
      "status": {
        "description": "The verification status.",
        "enum": [
          "FAILED",
          "PENDING",
          "VERIFIED",
          "UNKNOWN"
        ],
        "type": "string"
      }
    },
    "required": [
      "mailFromDomain"
    ],
    "type": "object"
  },
  "MatchCriteria": {
    "description": "Defines a simple matching condition",
    "properties": {
      "jsonPath": {
        "description": "The Goessner json path of the field to match",
        "type": "string"
      },
      "operator": {
        "description": "The type of operation to perform for matching check",
        "enum": [
          "GreaterThanOrEqual",
          "LessThanOrEqual",
          "Equal",
          "NotEqual",
          "LessThan",
          "GreaterThan",
          "NotIn",
          "In",
          "Contains",
          "All",
          "Exists",
          "Size"
        ],
        "type": "string"
      },
      "value": {
        "$ref": "#/definitions/JsonNode",
        "description": "The value to match on. Only one of value and values can be included"
      },
      "values": {
        "description": "The list of values to match on. Only one of value and values can be included",
        "items": {
          "$ref": "#/definitions/JsonNode"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "MediaPolicies": {
    "properties": {
      "callPolicy": {
        "$ref": "#/definitions/CallMediaPolicy",
        "description": "Conditions and actions for calls"
      },
      "chatPolicy": {
        "$ref": "#/definitions/ChatMediaPolicy",
        "description": "Conditions and actions for chats"
      },
      "emailPolicy": {
        "$ref": "#/definitions/EmailMediaPolicy",
        "description": "Conditions and actions for emails"
      },
      "messagePolicy": {
        "$ref": "#/definitions/MessageMediaPolicy",
        "description": "Conditions and actions for messages"
      }
    },
    "type": "object"
  },
  "MediaTypes": {
    "description": "Media types",
    "properties": {
      "allow": {
        "$ref": "#/definitions/MediaTypeAccess",
        "description": "Specify allowed media types for inbound and outbound messages. If this field is empty, all inbound and outbound media will be blocked."
      }
    },
    "type": "object"
  },
  "MemberGroup": {
    "properties": {
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "type": "string"
      },
      "memberCount": {
        "description": "The number of members in this group",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "type": {
        "description": "The group type",
        "enum": [
          "TEAM",
          "GROUP",
          "SKILLGROUP"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "MergeOperation": {
    "properties": {
      "resultingContact": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "The contact created as a result of the merge operation",
        "readOnly": true
      },
      "sourceContact": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "The source contact for the merge operation",
        "readOnly": true
      },
      "targetContact": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "The target contact for the merge operation",
        "readOnly": true
      }
    },
    "type": "object"
  },
  "MessagingSettingRequest": {
    "description": "Messaging setting for messaging platform integrations",
    "properties": {
      "content": {
        "$ref": "#/definitions/ContentSetting",
        "description": "Settings relating to message contents"
      },
      "event": {
        "$ref": "#/definitions/EventSetting",
        "description": "Settings relating to events which may occur"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The messaging Setting profile name",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "MessagingSettingRequestReference": {
    "description": "Messaging Setting for messaging platform integrations",
    "properties": {
      "id": {
        "description": "The messaging Setting unique identifier associated with this integration",
        "type": "string"
      }
    },
    "required": [
      "id"
    ],
    "type": "object"
  },
  "MessagingTemplate": {
    "description": "The messaging template identifies a structured message templates supported by a messaging channel.",
    "properties": {
      "whatsApp": {
        "$ref": "#/definitions/WhatsAppDefinition",
        "description": "Defines a messaging template for a WhatsApp messaging channel"
      }
    },
    "type": "object"
  },
  "MessengerSettings": {
    "description": "Settings concerning messenger",
    "properties": {
      "apps": {
        "$ref": "#/definitions/MessengerApps",
        "description": "The apps embedded in the messenger"
      },
      "enabled": {
        "description": "Whether or not messenger is enabled",
        "type": "boolean"
      },
      "fileUpload": {
        "$ref": "#/definitions/FileUploadSettings",
        "description": "The file upload settings for messenger"
      },
      "homeScreen": {
        "$ref": "#/definitions/MessengerHomeScreen",
        "description": "The homescreen settings for messenger"
      },
      "launcherButton": {
        "$ref": "#/definitions/LauncherButtonSettings",
        "description": "The launcher button settings for messenger"
      },
      "sessionPersistenceType": {
        "description": "The session persistence type for messenger",
        "enum": [
          "AcrossSubdomains",
          "DomainOrSubdomainOnly"
        ],
        "type": "string"
      },
      "styles": {
        "$ref": "#/definitions/MessengerStyles",
        "description": "The style settings for messenger"
      }
    },
    "type": "object"
  },
  "NTPSettings": {
    "properties": {
      "servers": {
        "description": "List of NTP servers, in priority order",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "Operation": {
    "properties": {
      "actionName": {
        "description": "Action name",
        "enum": [
          "CREATE",
          "CHECKIN",
          "CHECKOUT",
          "DEBUG",
          "DELETE",
          "HISTORY",
          "PUBLISH",
          "REVERT",
          "SAVE",
          "STATE_CHANGE",
          "UPDATE",
          "VALIDATE"
        ],
        "type": "string"
      },
      "actionStatus": {
        "description": "Action status",
        "enum": [
          "LOCKED",
          "UNLOCKED",
          "STARTED",
          "PENDING_GENERATION",
          "PENDING_BACKEND_NOTIFICATION",
          "SUCCESS",
          "FAILURE"
        ],
        "type": "string"
      },
      "client": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "complete": {
        "type": "boolean"
      },
      "errorCode": {
        "type": "string"
      },
      "errorDetails": {
        "items": {
          "$ref": "#/definitions/Detail"
        },
        "type": "array"
      },
      "errorMessage": {
        "type": "string"
      },
      "errorMessageParams": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "id": {
        "type": "string"
      },
      "user": {
        "$ref": "#/definitions/User"
      }
    },
    "type": "object"
  },
  "OutboundRouteBase": {
    "properties": {
      "classificationTypes": {
        "description": "The site associated to the outbound route.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "distribution": {
        "enum": [
          "SEQUENTIAL",
          "RANDOM"
        ],
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "enabled": {
        "type": "boolean"
      },
      "externalTrunkBases": {
        "description": "Trunk base settings of trunkType \"EXTERNAL\".  This base must also be set on an edge logical interface for correct routing.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "classificationTypes",
      "name"
    ],
    "type": "object"
  },
  "OutcomePredictorRequest": {
    "properties": {
      "outcome": {
        "$ref": "#/definitions/OutcomeRefRequest",
        "description": "The outcome for which this predictor will provide predictions."
      }
    },
    "required": [
      "outcome"
    ],
    "type": "object"
  },
  "OutcomeRefRequest": {
    "properties": {
      "id": {
        "description": "ID of outcome.",
        "type": "string"
      }
    },
    "required": [
      "id"
    ],
    "type": "object"
  },
  "Phone": {
    "properties": {
      "capabilities": {
        "$ref": "#/definitions/PhoneCapabilities"
      },
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "lineBaseSettings": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "lines": {
        "description": "Lines",
        "items": {
          "$ref": "#/definitions/Line"
        },
        "type": "array"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "phoneBaseSettings": {
        "$ref": "#/definitions/PhoneBaseSettings",
        "description": "Phone Base Settings"
      },
      "phoneMetaBase": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "primaryEdge": {
        "$ref": "#/definitions/Edge"
      },
      "properties": {
        "additionalProperties": {
          "type": "object"
        },
        "type": "object"
      },
      "secondaryEdge": {
        "$ref": "#/definitions/Edge"
      },
      "secondaryStatus": {
        "$ref": "#/definitions/PhoneStatus",
        "description": "The status of the phone and lines from the secondary Edge."
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "site": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The site associated to the phone."
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "status": {
        "$ref": "#/definitions/PhoneStatus",
        "description": "The status of the phone and lines from the primary Edge."
      },
      "userAgentInfo": {
        "$ref": "#/definitions/UserAgentInfo",
        "description": "User Agent Information for this phone. This includes model, firmware version, and manufacturer.",
        "readOnly": true
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      },
      "webRtcUser": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "This is the user associated with a WebRTC type phone.  It is required for all WebRTC phones."
      }
    },
    "required": [
      "lines",
      "name",
      "phoneBaseSettings",
      "site"
    ],
    "type": "object"
  },
  "PhoneBase": {
    "properties": {
      "capabilities": {
        "$ref": "#/definitions/PhoneCapabilities"
      },
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "lines": {
        "description": "The list of linebases associated with the phone base.",
        "items": {
          "$ref": "#/definitions/LineBase"
        },
        "type": "array"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "phoneMetaBase": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "A phone metabase is essentially a database for storing phone configuration settings, which simplifies the configuration process."
      },
      "properties": {
        "additionalProperties": {
          "type": "object"
        },
        "type": "object"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "lines",
      "name",
      "phoneMetaBase"
    ],
    "type": "object"
  },
  "PhoneBaseSettings": {
    "properties": {
      "id": {
        "description": "The globally unique identifier for this phone base settings",
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "format": "uri",
        "type": "string"
      }
    },
    "required": [
      "id"
    ],
    "type": "object"
  },
  "PhoneCapabilities": {
    "properties": {
      "allowReboot": {
        "type": "boolean"
      },
      "cdm": {
        "type": "boolean"
      },
      "dualRegisters": {
        "type": "boolean"
      },
      "hardwareIdType": {
        "type": "string"
      },
      "mediaCodecs": {
        "items": {
          "enum": [
            "audio/opus",
            "audio/pcmu",
            "audio/pcma",
            "audio/g729",
            "audio/g722"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "noCloudProvisioning": {
        "type": "boolean"
      },
      "noRebalance": {
        "type": "boolean"
      },
      "provisions": {
        "type": "boolean"
      },
      "registers": {
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "PhoneColumn": {
    "properties": {
      "columnName": {
        "description": "The name of the phone column.",
        "type": "string"
      },
      "type": {
        "description": "The type of the phone column. For example, 'cell' or 'home'.",
        "type": "string"
      }
    },
    "required": [
      "columnName",
      "type"
    ],
    "type": "object"
  },
  "PhoneNumber": {
    "properties": {
      "acceptsSMS": {
        "description": "Whether this phone number can accept SMS messages.",
        "type": "boolean"
      },
      "countryCode": {
        "description": "The detected country code from the provided phone number. This field is not user-writeable and will only be set when the provided phone number could be read as E164.",
        "type": "string"
      },
      "display": {
        "description": "The displayed form of the phone number string. Users should input the phone number in this field, but it will be altered by the API on write. If the phone number can be read as E164, the value will be replaced with international formatted-version of the number. If the number cannot be read as E164, the value will be preserved as-is. In both cases, the provided input string will be copied to the userInput field.",
        "type": "string"
      },
      "e164": {
        "description": "The E164-formatted form of the provided phone number. This field is not user-writeable and will only be set when the provided phone number could be read as E164.",
        "type": "string"
      },
      "extension": {
        "description": "An optional extension for the provided phone number.",
        "format": "int64",
        "type": "integer"
      },
      "normalizationCountryCode": {
        "description": "The country code that will be used for E164 conversion of a provided phone number. If the country code is omitted from the provided phone number, the country code provided in this field will be used during the E164 conversion attempt. If this field is left empty, the default country code for any provided phone number that does not explicitly include a country code is assumed to be +1 (North America).",
        "type": "string"
      },
      "userInput": {
        "description": "The user-inputted phone number string that was provided to the display field on write. This field is not user-writeable and will always be set by the system.",
        "type": "string"
      }
    },
    "type": "object"
  },
  "PhoneStatus": {
    "properties": {
      "edge": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The URI of the edge that provided this status information."
      },
      "edgesStatus": {
        "description": "The status of the primary or secondary Edges assigned to the phone lines.",
        "enum": [
          "IN_SERVICE",
          "MIXED_SERVICE",
          "OUT_OF_SERVICE",
          "NO_EDGES"
        ],
        "type": "string"
      },
      "eventCreationTime": {
        "description": "Event Creation Time represents an ISO-8601 string. For example: UTC, UTC+01:00, or Europe/London",
        "type": "string"
      },
      "id": {
        "type": "string"
      },
      "lineStatuses": {
        "description": "A list of LineStatus information for each of the lines of this phone",
        "items": {
          "$ref": "#/definitions/LineStatus"
        },
        "type": "array"
      },
      "operationalStatus": {
        "description": "The Operational Status of this phone",
        "enum": [
          "OPERATIONAL",
          "DEGRADED",
          "OFFLINE",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "phoneAssignmentToEdgeType": {
        "description": "The phone status's edge assignment type.",
        "enum": [
          "PRIMARY",
          "SECONDARY"
        ],
        "type": "string"
      },
      "provision": {
        "$ref": "#/definitions/ProvisionInfo",
        "description": "Provision information for this phone"
      },
      "selfUri": {
        "description": "The URI for this object. Deprecated. Do not use.",
        "format": "uri",
        "type": "string"
      }
    },
    "type": "object"
  },
  "PolicyActions": {
    "properties": {
      "alwaysDelete": {
        "description": "true to delete the recording associated with the conversation regardless of the values of retainRecording or deleteRecording. Default = false",
        "type": "boolean"
      },
      "assignCalibrations": {
        "items": {
          "$ref": "#/definitions/CalibrationAssignment"
        },
        "type": "array"
      },
      "assignEvaluations": {
        "items": {
          "$ref": "#/definitions/EvaluationAssignment"
        },
        "type": "array"
      },
      "assignMeteredAssignmentByAgent": {
        "items": {
          "$ref": "#/definitions/MeteredAssignmentByAgent"
        },
        "type": "array"
      },
      "assignMeteredEvaluations": {
        "items": {
          "$ref": "#/definitions/MeteredEvaluationAssignment"
        },
        "type": "array"
      },
      "assignSurveys": {
        "items": {
          "$ref": "#/definitions/SurveyAssignment"
        },
        "type": "array"
      },
      "deleteRecording": {
        "description": "true to delete the recording associated with the conversation. If retainRecording = true, this will be ignored. Default = false",
        "type": "boolean"
      },
      "initiateScreenRecording": {
        "$ref": "#/definitions/InitiateScreenRecording"
      },
      "integrationExport": {
        "$ref": "#/definitions/IntegrationExport",
        "description": "Policy action for exporting recordings using an integration to 3rd party s3."
      },
      "mediaTranscriptions": {
        "items": {
          "$ref": "#/definitions/MediaTranscription"
        },
        "type": "array"
      },
      "retainRecording": {
        "description": "true to retain the recording associated with the conversation. Default = true",
        "type": "boolean"
      },
      "retentionDuration": {
        "$ref": "#/definitions/RetentionDuration"
      }
    },
    "type": "object"
  },
  "PolicyConditions": {
    "properties": {
      "customerParticipation": {
        "description": "This condition is to filter out conversation with and without customer participation.",
        "enum": [
          "YES",
          "NO"
        ],
        "type": "string"
      },
      "dateRanges": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "directions": {
        "items": {
          "enum": [
            "INBOUND",
            "OUTBOUND"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "duration": {
        "$ref": "#/definitions/DurationCondition"
      },
      "forQueues": {
        "items": {
          "$ref": "#/definitions/Queue"
        },
        "type": "array"
      },
      "forUsers": {
        "items": {
          "$ref": "#/definitions/User"
        },
        "type": "array"
      },
      "mediaTypes": {
        "items": {
          "enum": [
            "CALL",
            "CHAT"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "teams": {
        "description": "Teams to match conversations against",
        "items": {
          "$ref": "#/definitions/Team"
        },
        "type": "array"
      },
      "timeAllowed": {
        "$ref": "#/definitions/TimeAllowed"
      },
      "wrapupCodes": {
        "items": {
          "$ref": "#/definitions/WrapupCode"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "PolicyCreate": {
    "properties": {
      "actions": {
        "$ref": "#/definitions/PolicyActions",
        "description": "Actions"
      },
      "conditions": {
        "$ref": "#/definitions/PolicyConditions",
        "description": "Conditions"
      },
      "createdDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "enabled": {
        "type": "boolean"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "mediaPolicies": {
        "$ref": "#/definitions/MediaPolicies",
        "description": "Conditions and actions per media type"
      },
      "modifiedDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "name": {
        "description": "The policy name.",
        "type": "string"
      },
      "order": {
        "format": "int32",
        "type": "integer"
      },
      "policyErrors": {
        "$ref": "#/definitions/PolicyErrors"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "PolicyErrors": {
    "properties": {
      "policyErrorMessages": {
        "items": {
          "$ref": "#/definitions/PolicyErrorMessage"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "PositionSettings": {
    "description": "Settings concerning position",
    "properties": {
      "alignment": {
        "description": "The alignment for position",
        "enum": [
          "Auto",
          "Left",
          "Right"
        ],
        "type": "string"
      },
      "bottomSpace": {
        "description": "The bottomspace value for position",
        "format": "int32",
        "type": "integer"
      },
      "sideSpace": {
        "description": "The sidespace value for position",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "PostActionInput": {
    "description": "Definition of an Action to be created or updated.",
    "properties": {
      "category": {
        "description": "Category of action, Can be up to 256 characters long",
        "type": "string"
      },
      "config": {
        "$ref": "#/definitions/ActionConfig",
        "description": "Configuration to support request and response processing"
      },
      "contract": {
        "$ref": "#/definitions/ActionContractInput",
        "description": "Action contract"
      },
      "integrationId": {
        "description": "The ID of the integration this action is associated to",
        "type": "string"
      },
      "name": {
        "description": "Name of action, Can be up to 256 characters long",
        "type": "string"
      },
      "secure": {
        "description": "Indication of whether or not the action is designed to accept sensitive data",
        "type": "boolean"
      }
    },
    "required": [
      "category",
      "config",
      "contract",
      "integrationId",
      "name"
    ],
    "type": "object"
  },
  "PreprocessingRule": {
    "properties": {
      "find": {
        "description": "The regular expression to which file lines are to be matched.",
        "type": "string"
      },
      "global": {
        "description": "Replaces all matching substrings in every line.",
        "type": "boolean"
      },
      "ignoreCase": {
        "description": "Enables case-insensitive matching",
        "type": "boolean"
      },
      "replaceWith": {
        "description": "The string to be substituted for each match.",
        "type": "string"
      }
    },
    "type": "object"
  },
  "Prompt": {
    "properties": {
      "currentOperation": {
        "$ref": "#/definitions/Operation",
        "description": "Current prompt operation status",
        "readOnly": true
      },
      "description": {
        "type": "string"
      },
      "id": {
        "description": "The prompt identifier",
        "type": "string"
      },
      "name": {
        "description": "The prompt name.",
        "type": "string"
      },
      "resources": {
        "description": "List of resources associated with this prompt",
        "items": {
          "$ref": "#/definitions/PromptAsset"
        },
        "readOnly": true,
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "PromptAsset": {
    "properties": {
      "durationSeconds": {
        "format": "double",
        "type": "number"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "language": {
        "description": "Prompt resource language",
        "readOnly": true,
        "type": "string"
      },
      "languageDefault": {
        "description": "Whether or not this resource locale is the default for the language",
        "readOnly": true,
        "type": "boolean"
      },
      "mediaUri": {
        "description": "URI of the resource audio",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "promptId": {
        "description": "Associated prompt ID",
        "readOnly": true,
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "tags": {
        "additionalProperties": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": "object"
      },
      "text": {
        "description": "Text of the resource",
        "type": "string"
      },
      "ttsString": {
        "description": "Text to speech of the resource",
        "type": "string"
      },
      "uploadStatus": {
        "description": "Audio upload status",
        "enum": [
          "created",
          "uploaded",
          "transcoded",
          "transcodeFailed"
        ],
        "readOnly": true,
        "type": "string"
      },
      "uploadUri": {
        "description": "Upload URI for the resource audio",
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "PublishDraftInput": {
    "description": "Draft to be published",
    "properties": {
      "version": {
        "description": "The current draft version.",
        "example": "If the current draft version is 2 and the current published version of Action is 33, then you would send 2 here. (Your draft will become published version 34)",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "version"
    ],
    "type": "object"
  },
  "PublishScriptRequestData": {
    "properties": {
      "scriptId": {
        "description": "The id of the script to publish",
        "type": "string"
      },
      "versionId": {
        "type": "string"
      }
    },
    "required": [
      "scriptId"
    ],
    "type": "object"
  },
  "QueueEmailAddress": {
    "properties": {
      "domain": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "route": {
        "$ref": "#/definitions/InboundRoute"
      }
    },
    "type": "object"
  },
  "QueueMediaSettings": {
    "properties": {
      "call": {
        "$ref": "#/definitions/MediaSettings",
        "description": "The queue media settings for call interactions."
      },
      "callback": {
        "$ref": "#/definitions/CallbackMediaSettings",
        "description": "The queue media settings for callback interactions."
      },
      "chat": {
        "$ref": "#/definitions/MediaSettings",
        "description": "The queue media settings for chat interactions."
      },
      "email": {
        "$ref": "#/definitions/EmailMediaSettings",
        "description": "The queue media settings for email interactions."
      },
      "message": {
        "$ref": "#/definitions/MediaSettings",
        "description": "The queue media settings for message interactions."
      }
    },
    "type": "object"
  },
  "QueueMessagingAddresses": {
    "properties": {
      "openMessagingRecipient": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "smsAddress": {
        "$ref": "#/definitions/DomainEntityRef"
      },
      "whatsAppRecipient": {
        "$ref": "#/definitions/DomainEntityRef"
      }
    },
    "type": "object"
  },
  "Reaction": {
    "properties": {
      "data": {
        "description": "Parameter for this reaction. For transfer_flow, this would be the outbound flow id.",
        "type": "string"
      },
      "name": {
        "description": "Name of the parameter for this reaction. For transfer_flow, this would be the outbound flow name.",
        "type": "string"
      },
      "reactionType": {
        "description": "The reaction to take for a given call analysis result.",
        "enum": [
          "hangup",
          "transfer",
          "transfer_flow",
          "play_file"
        ],
        "type": "string"
      }
    },
    "required": [
      "reactionType"
    ],
    "type": "object"
  },
  "RecallEntry": {
    "properties": {
      "minutesBetweenAttempts": {
        "format": "int32",
        "type": "integer"
      },
      "nbrAttempts": {
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "Response": {
    "description": "Contains information about a response.",
    "properties": {
      "assets": {
        "description": "Assets used in the response",
        "items": {
          "$ref": "#/definitions/AddressableEntityRef"
        },
        "type": "array"
      },
      "createdBy": {
        "$ref": "#/definitions/User",
        "description": "User that created the response",
        "readOnly": true
      },
      "dateCreated": {
        "description": "The date and time the response was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "footer": {
        "$ref": "#/definitions/FooterTemplate",
        "description": "Footer template definition for responseType.Footer."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "interactionType": {
        "description": "The interaction type for this response.",
        "enum": [
          "chat",
          "email",
          "twitter"
        ],
        "type": "string"
      },
      "libraries": {
        "description": "One or more libraries response is associated with.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "messagingTemplate": {
        "$ref": "#/definitions/MessagingTemplate",
        "description": "An optional messaging template definition for responseType.MessagingTemplate."
      },
      "name": {
        "type": "string"
      },
      "responseType": {
        "description": "The response type represented by the response.",
        "enum": [
          "MessagingTemplate",
          "CampaignSmsTemplate",
          "CampaignEmailTemplate",
          "Footer"
        ],
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "substitutions": {
        "description": "Details about any text substitutions used in the texts for this response.",
        "items": {
          "$ref": "#/definitions/ResponseSubstitution"
        },
        "type": "array"
      },
      "substitutionsSchema": {
        "$ref": "#/definitions/JsonSchemaDocument",
        "description": "Metadata about the text substitutions in json schema format."
      },
      "texts": {
        "description": "One or more texts associated with the response.",
        "items": {
          "$ref": "#/definitions/ResponseText"
        },
        "type": "array"
      },
      "version": {
        "description": "Version number required for updates.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "libraries",
      "texts"
    ],
    "type": "object"
  },
  "ResponseSet": {
    "properties": {
      "amdSpeechDistinguishEnabled": {
        "description": "Whether to enable answering machine detection",
        "type": "boolean"
      },
      "beepDetectionEnabled": {
        "description": "Whether to enable answering machine beep detection",
        "type": "boolean"
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the ResponseSet.",
        "type": "string"
      },
      "responses": {
        "additionalProperties": {
          "$ref": "#/definitions/Reaction"
        },
        "description": "Map of disposition identifiers to reactions. For example: {\"disposition.classification.callable.person\": {\"reactionType\": \"transfer\"}}.",
        "type": "object"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name",
      "responses"
    ],
    "type": "object"
  },
  "ResponseSubstitution": {
    "description": "Contains information about the substitutions associated with a response.",
    "properties": {
      "defaultValue": {
        "description": "Response substitution default value.",
        "type": "string"
      },
      "description": {
        "description": "Response substitution description.",
        "type": "string"
      },
      "id": {
        "description": "Response substitution identifier.",
        "type": "string"
      }
    },
    "required": [
      "id"
    ],
    "type": "object"
  },
  "ResponseText": {
    "description": "Contains information about the text associated with a response.",
    "properties": {
      "content": {
        "description": "Response text content.",
        "type": "string"
      },
      "contentType": {
        "description": "Response text content type.",
        "enum": [
          "text/plain",
          "text/html"
        ],
        "type": "string"
      },
      "type": {
        "description": "Response text type.",
        "enum": [
          "body",
          "subject"
        ],
        "type": "string"
      }
    },
    "required": [
      "content"
    ],
    "type": "object"
  },
  "RestErrorDetail": {
    "properties": {
      "details": {
        "description": "additional information regarding the error",
        "readOnly": true,
        "type": "string"
      },
      "error": {
        "description": "name of the error",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "error"
    ],
    "type": "object"
  },
  "RoleDivisionGrants": {
    "properties": {
      "grants": {
        "description": "A list containing pairs of role and division IDs",
        "items": {
          "$ref": "#/definitions/RoleDivisionPair"
        },
        "type": "array"
      }
    },
    "required": [
      "grants"
    ],
    "type": "object"
  },
  "RoleDivisionPair": {
    "properties": {
      "divisionId": {
        "description": "The ID of the division",
        "type": "string"
      },
      "roleId": {
        "description": "The ID of the role",
        "type": "string"
      }
    },
    "required": [
      "divisionId",
      "roleId"
    ],
    "type": "object"
  },
  "RoutingRule": {
    "properties": {
      "operator": {
        "description": "matching operator.  MEETS_THRESHOLD matches any agent with a score at or above the rule's threshold.  ANY matches all specified agents, regardless of score.",
        "enum": [
          "MEETS_THRESHOLD",
          "ANY"
        ],
        "type": "string"
      },
      "threshold": {
        "description": "threshold required for routing attempt (generally an agent score).  may be null for operator ANY.",
        "format": "int32",
        "type": "integer"
      },
      "waitSeconds": {
        "description": "seconds to wait in this rule before moving to the next",
        "format": "double",
        "type": "number"
      }
    },
    "type": "object"
  },
  "RoutingSkill": {
    "properties": {
      "dateModified": {
        "description": "Date last modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the skill.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "The current state for this skill.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Required when updating. Version must be the current version. Only the system can assign version.",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "RuleSet": {
    "properties": {
      "contactList": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "A ContactList to provide user-interface suggestions for contact columns on relevant conditions and actions."
      },
      "dateCreated": {
        "description": "Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the RuleSet.",
        "type": "string"
      },
      "queue": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "A Queue to provide user-interface suggestions for wrap-up codes on relevant conditions and actions."
      },
      "rules": {
        "description": "The list of rules.",
        "items": {
          "$ref": "#/definitions/DialerRule"
        },
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Required for updates, must match the version number of the most recent update",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name",
      "rules"
    ],
    "type": "object"
  },
  "Schedule": {
    "description": "Defines a period of time to perform a specific action.  Each schedule must be associated with one or more schedule groups to be used.",
    "properties": {
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "end": {
        "description": "Date time is represented as an ISO-8601 string without a timezone. For example: yyyy-MM-ddTHH:mm:ss.SSS",
        "format": "local-date-time",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "rrule": {
        "description": "An iCal Recurrence Rule (RRULE) string. It is required to be set for schedules determining when upgrades to the Edge software can be applied.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "start": {
        "description": "Date time is represented as an ISO-8601 string without a timezone. For example: yyyy-MM-ddTHH:mm:ss.SSS",
        "format": "local-date-time",
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "end",
      "name",
      "start"
    ],
    "type": "object"
  },
  "ScheduleGroup": {
    "description": "A group of schedules that define the operating hours of an organization.",
    "properties": {
      "closedSchedules": {
        "description": "The schedules defining the hours an organization is closed.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "holidaySchedules": {
        "description": "The schedules defining the hours an organization is closed for the holidays.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "openSchedules": {
        "description": "The schedules defining the hours an organization is open.",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "timeZone": {
        "description": "The timezone the schedules are a part of.  This is not a schedule property to allow a schedule to be used in multiple timezones.",
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "Script": {
    "properties": {
      "createdDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "customActions": {
        "type": "object"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "features": {
        "type": "object"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "pages": {
        "items": {
          "$ref": "#/definitions/Page"
        },
        "type": "array"
      },
      "publishedDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "startPageId": {
        "type": "string"
      },
      "startPageName": {
        "type": "string"
      },
      "variables": {
        "type": "object"
      },
      "versionDate": {
        "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "versionId": {
        "type": "string"
      }
    },
    "type": "object"
  },
  "Signature": {
    "properties": {
      "alwaysIncluded": {
        "description": "A toggle that defines if a signature is always included or only set on the first email in an email chain.",
        "type": "boolean"
      },
      "cannedResponseId": {
        "description": "The identifier referring to an email signature canned response.",
        "type": "string"
      },
      "enabled": {
        "description": "A toggle to enable the signature on email send.",
        "type": "boolean"
      },
      "inclusionType": {
        "description": "The configuration to indicate when the signature of a conversation has to be included",
        "enum": [
          "Draft",
          "Send",
          "SendOnce"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "Site": {
    "properties": {
      "addresses": {
        "items": {
          "$ref": "#/definitions/Contact"
        },
        "type": "array"
      },
      "callerId": {
        "description": "The caller ID value for the site.",
        "type": "string"
      },
      "callerName": {
        "description": "The caller name for the site.",
        "type": "string"
      },
      "cloudProxyForceTurn": {
        "description": "Enables premises Edge Force Turn ",
        "type": "boolean"
      },
      "coreSite": {
        "description": "Is this site a core site",
        "type": "boolean"
      },
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "edgeAutoUpdateConfig": {
        "$ref": "#/definitions/EdgeAutoUpdateConfig",
        "description": "Recurrance rule, time zone, and start/end settings for automatic edge updates for this site"
      },
      "edges": {
        "items": {
          "$ref": "#/definitions/Edge"
        },
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "location": {
        "$ref": "#/definitions/LocationDefinition",
        "description": "Location"
      },
      "managed": {
        "type": "boolean"
      },
      "mediaModel": {
        "description": "Media model for the site",
        "enum": [
          "Premises",
          "Cloud"
        ],
        "type": "string"
      },
      "mediaRegions": {
        "description": "The ordered list of AWS regions through which media can stream.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "mediaRegionsUseLatencyBased": {
        "type": "boolean"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "ntpSettings": {
        "$ref": "#/definitions/NTPSettings",
        "description": "Network Time Protocol settings for the site"
      },
      "primaryEdges": {
        "items": {
          "$ref": "#/definitions/Edge"
        },
        "type": "array"
      },
      "primarySites": {
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "secondaryEdges": {
        "items": {
          "$ref": "#/definitions/Edge"
        },
        "type": "array"
      },
      "secondarySites": {
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "type": "array"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "siteConnections": {
        "description": "The site connections",
        "items": {
          "$ref": "#/definitions/SiteConnection"
        },
        "type": "array"
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "location",
      "name"
    ],
    "type": "object"
  },
  "SiteConnection": {
    "properties": {
      "coreSite": {
        "description": "The core site",
        "readOnly": true,
        "type": "boolean"
      },
      "edgeList": {
        "description": "All of the edges to which the site connects",
        "items": {
          "$ref": "#/definitions/ConnectedEdge"
        },
        "readOnly": true,
        "type": "array"
      },
      "enabled": {
        "description": "Indicates if the current site is linked",
        "type": "boolean"
      },
      "id": {
        "type": "string"
      },
      "managed": {
        "type": "boolean"
      },
      "mediaModel": {
        "description": "Media model for the current site.",
        "enum": [
          "Premises",
          "Cloud"
        ],
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "primaryCoreSites": {
        "description": "List of site ids names and selfUris for the primary core sites",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "readOnly": true,
        "type": "array"
      },
      "secondaryCoreSites": {
        "description": "List of site ids names and selfUris for the secondary core sites",
        "items": {
          "$ref": "#/definitions/DomainEntityRef"
        },
        "readOnly": true,
        "type": "array"
      },
      "selfUri": {
        "format": "uri",
        "type": "string"
      },
      "type": {
        "description": "Connection method from site to site (Direct, Indirect, CloudProxy",
        "enum": [
          "Direct",
          "Indirect",
          "CloudProxy"
        ],
        "type": "string"
      }
    },
    "type": "object"
  },
  "SkillGroupCondition": {
    "properties": {
      "languageSkillConditions": {
        "description": "Routing skill conditions that will be used for building the query",
        "items": {
          "$ref": "#/definitions/SkillGroupLanguageCondition"
        },
        "type": "array"
      },
      "operation": {
        "description": "Operator that will be applied to the conditions",
        "enum": [
          "And",
          "Not",
          "Or"
        ],
        "type": "string"
      },
      "routingSkillConditions": {
        "description": "Routing skill conditions that will be used for building the query",
        "items": {
          "$ref": "#/definitions/SkillGroupRoutingCondition"
        },
        "type": "array"
      }
    },
    "required": [
      "languageSkillConditions",
      "operation",
      "routingSkillConditions"
    ],
    "type": "object"
  },
  "SkillGroupWithMemberDivisions": {
    "properties": {
      "dateCreated": {
        "description": "Created date/time of the skill group. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified date/time of the skill group. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "Group description",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "memberCount": {
        "description": "Estimated number of members in this group. It can take some time for the count to be updated after expressions are changed.",
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      },
      "memberDivisions": {
        "description": "Member divisions for this skill group",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "name": {
        "description": "The group name.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "skillConditions": {
        "description": "Conditions for this group",
        "items": {
          "$ref": "#/definitions/SkillGroupCondition"
        },
        "type": "array"
      },
      "status": {
        "description": "Group's filling status",
        "enum": [
          "InProgress",
          "Complete"
        ],
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name",
      "skillConditions"
    ],
    "type": "object"
  },
  "SmsAddressProvision": {
    "properties": {
      "autoCorrectAddress": {
        "description": "This is used when the address is created. If the value is not set or true, then the system will, if necessary, auto-correct the address you provide. Set this value to false if the system should not auto-correct the address.",
        "type": "boolean"
      },
      "city": {
        "description": "The city in which this address is in",
        "type": "string"
      },
      "countryCode": {
        "description": "The ISO country code of this address",
        "type": "string"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "Name associated with this address",
        "type": "string"
      },
      "postalCode": {
        "description": "The postal code this address is in",
        "type": "string"
      },
      "region": {
        "description": "The state or region this address is in",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "street": {
        "description": "The number and street address where this address is located.",
        "type": "string"
      }
    },
    "required": [
      "city",
      "countryCode",
      "name",
      "postalCode",
      "region",
      "street"
    ],
    "type": "object"
  },
  "SupportCenterSettings": {
    "description": "Settings concerning knowledge portal (previously support center)",
    "properties": {
      "customMessages": {
        "description": "Customizable display texts for knowledge portal (previously support center)",
        "items": {
          "$ref": "#/definitions/SupportCenterCustomMessage"
        },
        "type": "array"
      },
      "enabled": {
        "description": "Whether or not knowledge portal (previously support center) is enabled",
        "type": "boolean"
      },
      "enabledCategories": {
        "description": "Featured categories for knowledge portal (previously support center) home screen",
        "items": {
          "$ref": "#/definitions/SupportCenterCategory"
        },
        "type": "array"
      },
      "feedback": {
        "$ref": "#/definitions/SupportCenterFeedbackSettings",
        "description": "Customer feedback settings"
      },
      "knowledgeBase": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "The knowledge base for knowledge portal (previously support center)"
      },
      "routerType": {
        "description": "Router type for knowledge portal (previously support center)",
        "enum": [
          "Hash",
          "Browser"
        ],
        "type": "string"
      },
      "screens": {
        "description": "Available screens for the knowledge portal (previously support center) with its modules",
        "items": {
          "$ref": "#/definitions/SupportCenterScreen"
        },
        "type": "array"
      },
      "styleSetting": {
        "$ref": "#/definitions/SupportCenterStyleSetting",
        "description": "Style attributes for knowledge portal (previously support center)"
      }
    },
    "required": [
      "enabled",
      "enabledCategories",
      "knowledgeBase",
      "screens",
      "styleSetting"
    ],
    "type": "object"
  },
  "SupportedContent": {
    "description": "Supported content profile for inbound and outbound messages",
    "properties": {
      "createdBy": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "User reference that created this supported content profile",
        "readOnly": true
      },
      "dateCreated": {
        "description": "Date this supported content profile was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Date this supported content profile was modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "id": {
        "description": "A unique supported content Id.",
        "readOnly": true,
        "type": "string"
      },
      "mediaTypes": {
        "$ref": "#/definitions/MediaTypes",
        "description": "Defines the allowable media that may be accepted for an inbound message or to be sent in an outbound message. The following is an example of allowing all inbound media, and for outbound all images and only mpeg video: {\n  \"mediaTypes\": {\n    \"allow\": {\n      \"inbound\": [{\"type\": \"*/*\"}],\n      \"outbound\": [{\"type\": \"image/*\"}, {\"type\": \"video/mpeg\"}]\n    }\n  }\n}"
      },
      "modifiedBy": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "User reference that modified this supported content profile",
        "readOnly": true
      },
      "name": {
        "description": "The name of the supported content profile",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "version": {
        "description": "Version number",
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      }
    },
    "required": [
      "id",
      "name"
    ],
    "type": "object"
  },
  "SupportedContentReference": {
    "description": "Reference to supported content profile associated with the integration",
    "properties": {
      "id": {
        "description": "The SupportedContent unique identifier associated with this integration",
        "type": "string"
      },
      "mediaTypes": {
        "$ref": "#/definitions/MediaTypes",
        "description": "Media types definition for the supported content",
        "readOnly": true
      },
      "name": {
        "description": "The SupportedContent profile name",
        "readOnly": true,
        "type": "string"
      },
      "selfUri": {
        "description": "The SupportedContent profile URI",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "id"
    ],
    "type": "object"
  },
  "Team": {
    "properties": {
      "dateCreated": {
        "description": "Last modified datetime. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "Last modified datetime. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "Team information.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableDivision",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "memberCount": {
        "description": "Number of members in a team",
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      },
      "name": {
        "description": "The team name",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "TriggerTarget": {
    "description": "The target of a trigger invocation",
    "properties": {
      "id": {
        "description": "The ID of the entity to target",
        "type": "string"
      },
      "type": {
        "description": "The entity type to target",
        "enum": [
          "Workflow"
        ],
        "type": "string"
      },
      "workflowTargetSettings": {
        "$ref": "#/definitions/WorkflowTargetSettings",
        "description": "Optional config for the target."
      }
    },
    "type": "object"
  },
  "TrunkBase": {
    "properties": {
      "createdBy": {
        "description": "The ID of the user that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "createdByApp": {
        "description": "The application that created the resource.",
        "readOnly": true,
        "type": "string"
      },
      "dateCreated": {
        "description": "The date the resource was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date of the last modification to the resource. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The resource's description.",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "inboundSite": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "Allows a customer to set the site to which inbound calls will be routed"
      },
      "managed": {
        "description": "Is this trunk being managed remotely. This property is synchronized with the managed property of the Edge Group to which it is assigned.",
        "type": "boolean"
      },
      "modifiedBy": {
        "description": "The ID of the user that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedByApp": {
        "description": "The application that last modified the resource.",
        "readOnly": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the entity.",
        "type": "string"
      },
      "properties": {
        "additionalProperties": {
          "type": "object"
        },
        "type": "object"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "site": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "Used to determine the media regions for inbound and outbound calls through a trunk. Also determines the dial plan to use for calls that came in on a trunk and have to be sent out on it as well."
      },
      "state": {
        "description": "Indicates if the resource is active, inactive, or deleted.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "trunkMetabase": {
        "$ref": "#/definitions/DomainEntityRef",
        "description": "The meta-base this trunk is based on."
      },
      "trunkType": {
        "description": "The type of this trunk base.",
        "enum": [
          "EXTERNAL",
          "PHONE",
          "EDGE"
        ],
        "type": "string"
      },
      "version": {
        "description": "The current version of the resource.",
        "format": "int32",
        "type": "integer"
      }
    },
    "required": [
      "name",
      "trunkMetabase",
      "trunkType"
    ],
    "type": "object"
  },
  "TrunkBaseAssignment": {
    "properties": {
      "family": {
        "description": "The address family to use with the trunk base settings. 2=IPv4, 23=IPv6",
        "format": "int32",
        "type": "integer"
      },
      "trunkBase": {
        "$ref": "#/definitions/TrunkBase",
        "description": "A trunk base settings reference."
      }
    },
    "type": "object"
  },
  "TrustRequestCreate": {
    "properties": {
      "groupIds": {
        "description": "The list of trustee groups that are requesting access. If no groups are specified, at least one user is required.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "userIds": {
        "description": "The list of trustee users that are requesting access. If no users are specified, at least one group is required.",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "TwitterId": {
    "description": "User information for a twitter account",
    "properties": {
      "id": {
        "description": "twitter user.id_str",
        "type": "string"
      },
      "name": {
        "description": "twitter user.name",
        "type": "string"
      },
      "profileUrl": {
        "description": "url of user's twitter profile",
        "readOnly": true,
        "type": "string"
      },
      "screenName": {
        "description": "twitter user.screen_name",
        "type": "string"
      },
      "verified": {
        "description": "whether this data has been verified using the twitter API",
        "readOnly": true,
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "User": {
    "properties": {
      "acdAutoAnswer": {
        "description": "acd auto answer",
        "type": "boolean"
      },
      "addresses": {
        "description": "Email addresses and phone numbers for this user",
        "items": {
          "$ref": "#/definitions/Contact"
        },
        "type": "array"
      },
      "authorization": {
        "$ref": "#/definitions/UserAuthorization",
        "description": "Roles and permissions assigned to the user",
        "readOnly": true
      },
      "biography": {
        "$ref": "#/definitions/Biography"
      },
      "certifications": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "chat": {
        "$ref": "#/definitions/Chat"
      },
      "conversationSummary": {
        "$ref": "#/definitions/UserConversationSummary",
        "description": "Summary of conversion statistics for conversation types.",
        "readOnly": true
      },
      "dateLastLogin": {
        "description": "The last time the user logged in using username and password. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "department": {
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/Division",
        "description": "The division to which this entity belongs."
      },
      "email": {
        "type": "string"
      },
      "employerInfo": {
        "$ref": "#/definitions/EmployerInfo"
      },
      "geolocation": {
        "$ref": "#/definitions/Geolocation",
        "description": "Current geolocation position",
        "readOnly": true
      },
      "groups": {
        "description": "The groups the user is a member of",
        "items": {
          "$ref": "#/definitions/Group"
        },
        "readOnly": true,
        "type": "array"
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "images": {
        "items": {
          "$ref": "#/definitions/Image"
        },
        "type": "array"
      },
      "integrationPresence": {
        "$ref": "#/definitions/UserPresence",
        "description": "Integration presence",
        "readOnly": true
      },
      "languagePreference": {
        "description": "preferred language by the user",
        "readOnly": true,
        "type": "string"
      },
      "languages": {
        "description": "Routing (ACD) languages possessed by the user",
        "items": {
          "$ref": "#/definitions/UserRoutingLanguage"
        },
        "readOnly": true,
        "type": "array"
      },
      "lastTokenIssued": {
        "$ref": "#/definitions/OAuthLastTokenIssued"
      },
      "locations": {
        "description": "The user placement at each site location.",
        "items": {
          "$ref": "#/definitions/Location"
        },
        "readOnly": true,
        "type": "array"
      },
      "manager": {
        "$ref": "#/definitions/User"
      },
      "name": {
        "type": "string"
      },
      "outOfOffice": {
        "$ref": "#/definitions/OutOfOffice",
        "description": "Determine if out of office is enabled",
        "readOnly": true
      },
      "preferredName": {
        "description": "Preferred full name of the agent",
        "type": "string"
      },
      "presence": {
        "$ref": "#/definitions/UserPresence",
        "description": "Active presence",
        "readOnly": true
      },
      "primaryContactInfo": {
        "description": "Auto populated from addresses.",
        "items": {
          "$ref": "#/definitions/Contact"
        },
        "readOnly": true,
        "type": "array"
      },
      "profileSkills": {
        "description": "Profile skills possessed by the user",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "type": "array"
      },
      "routingStatus": {
        "$ref": "#/definitions/RoutingStatus",
        "description": "ACD routing status",
        "readOnly": true
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "skills": {
        "description": "Routing (ACD) skills possessed by the user",
        "items": {
          "$ref": "#/definitions/UserRoutingSkill"
        },
        "readOnly": true,
        "type": "array"
      },
      "state": {
        "description": "The current state for this user.",
        "enum": [
          "active",
          "inactive",
          "deleted"
        ],
        "readOnly": true,
        "type": "string"
      },
      "station": {
        "$ref": "#/definitions/UserStations",
        "description": "Effective, default, and last station information",
        "readOnly": true
      },
      "team": {
        "$ref": "#/definitions/Team",
        "description": "The team the user is a member of",
        "readOnly": true
      },
      "title": {
        "type": "string"
      },
      "username": {
        "type": "string"
      },
      "version": {
        "description": "Required when updating a user, this value should be the current version of the user.  The current version can be obtained with a GET on the user before doing a PATCH.",
        "format": "int32",
        "type": "integer"
      },
      "workPlanBidRanks": {
        "$ref": "#/definitions/WorkPlanBidRanks",
        "description": "The WFM work plan bid rank settings for the user",
        "readOnly": true
      }
    },
    "required": [
      "version"
    ],
    "type": "object"
  },
  "UserAgentInfo": {
    "properties": {
      "firmwareVersion": {
        "description": "The firmware version of the phone.",
        "type": "string"
      },
      "manufacturer": {
        "description": "The manufacturer of the phone.",
        "type": "string"
      },
      "model": {
        "description": "The model of the phone.",
        "type": "string"
      }
    },
    "type": "object"
  },
  "WebDeployment": {
    "description": "Details about a Web Deployment",
    "properties": {
      "allowAllDomains": {
        "description": "Property indicates whether all domains are allowed or not. allowedDomains must be empty when this is set as true.",
        "type": "boolean"
      },
      "allowedDomains": {
        "description": "The list of domains that are approved to use this deployment; the list will be added to CORS headers for ease of web use.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "configuration": {
        "$ref": "#/definitions/WebDeploymentConfigurationVersionEntityRef",
        "description": "The config version this deployment uses"
      },
      "dateCreated": {
        "description": "The date the deployment was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date the deployment was most recently modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "description": {
        "description": "The description of the config",
        "type": "string"
      },
      "flow": {
        "$ref": "#/definitions/WebDeploymentFlowEntityRef",
        "description": "A reference to the inboundshortmessage flow used by this deployment"
      },
      "id": {
        "description": "The deployment ID",
        "readOnly": true,
        "type": "string"
      },
      "lastModifiedUser": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "A reference to the user who most recently modified the deployment",
        "readOnly": true
      },
      "name": {
        "description": "The deployment name",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "snippet": {
        "description": "Javascript snippet used to load the config",
        "readOnly": true,
        "type": "string"
      },
      "status": {
        "description": "The current status of the deployment",
        "enum": [
          "Pending",
          "Active",
          "Inactive",
          "Error",
          "Deleting"
        ],
        "type": "string"
      },
      "supportedContent": {
        "$ref": "#/definitions/SupportedContentReference",
        "description": "The supported content profile for a deployment"
      }
    },
    "required": [
      "configuration",
      "name"
    ],
    "type": "object"
  },
  "WebDeploymentConfigurationVersion": {
    "description": "Details about the configuration version of a Web Deployment",
    "properties": {
      "authenticationSettings": {
        "$ref": "#/definitions/AuthenticationSettings",
        "description": "The settings for authenticated deployments"
      },
      "cobrowse": {
        "$ref": "#/definitions/CobrowseSettings",
        "description": "The settings for cobrowse"
      },
      "createdUser": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "A reference to the user who created the configuration version",
        "readOnly": true
      },
      "customI18nLabels": {
        "description": "The localization settings for homescreen app",
        "items": {
          "$ref": "#/definitions/CustomI18nLabels"
        },
        "type": "array"
      },
      "dateCreated": {
        "description": "The date the configuration version was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "dateModified": {
        "description": "The date the configuration version was most recently modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "datePublished": {
        "description": "The date the configuration version was most recently published. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "defaultLanguage": {
        "description": "The default language to use for the configuration required if the messenger is enabled",
        "example": "en-us, de-de",
        "type": "string"
      },
      "description": {
        "description": "The description of the configuration",
        "type": "string"
      },
      "headlessMode": {
        "$ref": "#/definitions/WebDeploymentHeadlessMode",
        "description": "Headless Mode Support which Controls UI components. When enabled, native UI components will be disabled and allows for custom-built UI."
      },
      "id": {
        "description": "The configuration version ID",
        "readOnly": true,
        "type": "string"
      },
      "journeyEvents": {
        "$ref": "#/definitions/JourneyEventsSettings",
        "description": "The settings for journey events"
      },
      "languages": {
        "description": "A list of languages supported on the configuration required if the messenger is enabled",
        "example": "en-us, de-de",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "lastModifiedUser": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "A reference to the user who most recently modified the configuration version",
        "readOnly": true
      },
      "messenger": {
        "$ref": "#/definitions/MessengerSettings",
        "description": "The settings for messenger"
      },
      "name": {
        "description": "The configuration version name",
        "type": "string"
      },
      "position": {
        "$ref": "#/definitions/PositionSettings",
        "description": "The settings for position"
      },
      "publishedUser": {
        "$ref": "#/definitions/AddressableEntityRef",
        "description": "A reference to the user who published the configuration version",
        "readOnly": true
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "status": {
        "description": "The current status of the configuration version",
        "enum": [
          "Pending",
          "Active",
          "Inactive",
          "Error",
          "Deleting"
        ],
        "type": "string"
      },
      "supportCenter": {
        "$ref": "#/definitions/SupportCenterSettings",
        "description": "The settings for knowledge portal (previously support center)"
      },
      "version": {
        "description": "The version of the configuration",
        "example": "DRAFT, 1, 2",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "WebDeploymentConfigurationVersionEntityRef": {
    "properties": {
      "id": {
        "description": "The configuration version ID",
        "type": "string"
      },
      "name": {
        "description": "The configuration version name",
        "type": "string"
      },
      "selfUri": {
        "format": "uri",
        "type": "string"
      },
      "version": {
        "description": "The version of the configuration",
        "example": "DRAFT, 1, 2",
        "type": "string"
      }
    },
    "required": [
      "id",
      "version"
    ],
    "type": "object"
  },
  "WebDeploymentFlowEntityRef": {
    "properties": {
      "flowDescription": {
        "description": "The flow description for the webdeployment",
        "type": "string"
      },
      "id": {
        "description": "The Flow ID",
        "type": "string"
      },
      "name": {
        "description": "The Flow name",
        "type": "string"
      },
      "publishVersion": {
        "$ref": "#/definitions/FlowVersion",
        "description": "The published config version for the associated deployment"
      },
      "selfUri": {
        "format": "uri",
        "type": "string"
      }
    },
    "required": [
      "id"
    ],
    "type": "object"
  },
  "WebDeploymentHeadlessMode": {
    "properties": {
      "enabled": {
        "description": "Whether or not Headless Mode is enabled",
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "WhatsAppId": {
    "description": "User information for a WhatsApp account",
    "properties": {
      "displayName": {
        "description": "The displayName of this person's account in WhatsApp",
        "type": "string"
      },
      "phoneNumber": {
        "$ref": "#/definitions/PhoneNumber",
        "description": "The phone number associated with this WhatsApp account"
      }
    },
    "type": "object"
  },
  "WorkbinCreate": {
    "properties": {
      "description": {
        "description": "Workbin description. Maximum length of 512 characters.",
        "type": "string"
      },
      "divisionId": {
        "description": "The ID of the division the Workbin belongs to. Defaults to home division ID.",
        "type": "string"
      },
      "name": {
        "description": "Workbin name. Valid length between 3 and 256 characters.",
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "WorkitemCreate": {
    "properties": {
      "assigneeId": {
        "description": "The ID of the assignee of the Workitem. Must be a valid UUID.",
        "type": "string"
      },
      "autoStatusTransition": {
        "description": "Set it to false to disable auto status transition. By default, it is enabled.",
        "type": "boolean"
      },
      "customFields": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Custom fields defined in the schema referenced by the worktype of the workitem.",
        "type": "object"
      },
      "dateDue": {
        "description": "The due date of the Workitem. Can not be greater than 365 days from the current time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "dateExpires": {
        "description": "The expiry date of the Workitem. Can not be greater than 365 days from the current time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "description": {
        "description": "The description of the Workitem. Maximum length of 512 characters.",
        "type": "string"
      },
      "durationSeconds": {
        "description": "The estimated duration in seconds to complete the Workitem. Maximum of 365 days.",
        "format": "int32",
        "type": "integer"
      },
      "externalContactId": {
        "description": "The ID of the external contact of the Workitem. Must be a valid UUID.",
        "type": "string"
      },
      "externalTag": {
        "description": "The external tag of the Workitem.",
        "type": "string"
      },
      "languageId": {
        "description": "The ID of language of the Workitem. Must be a valid UUID.",
        "type": "string"
      },
      "name": {
        "description": "The name of the Workitem. Valid length between 3 and 256 characters.",
        "type": "string"
      },
      "preferredAgentIds": {
        "description": "The preferred agent IDs of the Workitem. Must be valid UUIDs.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "priority": {
        "description": "The priority of the Workitem. The valid range is between -25,000,000 and 25,000,000.",
        "format": "int32",
        "type": "integer"
      },
      "queueId": {
        "description": "The ID of the Workitems queue. Must be a valid UUID.",
        "type": "string"
      },
      "scoredAgents": {
        "description": "A list of scored agents for the Workitem. A workitem can have a maximum of 20 scored agents.",
        "items": {
          "$ref": "#/definitions/WorkitemScoredAgentRequest"
        },
        "type": "array"
      },
      "skillIds": {
        "description": "The skill IDs of the Workitem. Must be valid UUIDs.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "statusId": {
        "description": "The ID of the Status of the Workitem.",
        "type": "string"
      },
      "ttl": {
        "description": "The epoch timestamp in seconds specifying the time to live for the Workitem. Can not be greater than 365 days from the current time.",
        "format": "int32",
        "type": "integer"
      },
      "typeId": {
        "description": "The ID of the Worktype of the Workitem.",
        "type": "string"
      },
      "utilizationLabelId": {
        "description": "The ID of utilization label of the Workitem. Must be a valid UUID.",
        "type": "string"
      },
      "workbinId": {
        "description": "The ID of Workbin that contains the Workitem.",
        "type": "string"
      },
      "wrapupCode": {
        "description": "The ID of the wrapup. Must be a valid UUID.",
        "type": "string"
      }
    },
    "required": [
      "name",
      "typeId"
    ],
    "type": "object"
  },
  "WorkitemScoredAgentRequest": {
    "properties": {
      "id": {
        "description": "An agents ID. Must be a valid UUID.",
        "type": "string"
      },
      "score": {
        "description": "Agent's score for the workitem, from 0 - 100, higher being better",
        "format": "int32",
        "type": "integer"
      }
    },
    "type": "object"
  },
  "WorkitemStatusCreate": {
    "properties": {
      "category": {
        "description": "The Category of the Status.",
        "enum": [
          "Open",
          "InProgress",
          "Waiting",
          "Closed",
          "Unknown"
        ],
        "type": "string"
      },
      "defaultDestinationStatusId": {
        "description": "Default destination status to which this Status will transition to if auto status transition enabled.",
        "type": "string"
      },
      "description": {
        "description": "The description of the Status. Maximum length of 512 characters.",
        "type": "string"
      },
      "destinationStatusIds": {
        "description": "A list of destination Statuses where a Workitem with this Status can transition to. If the list is empty Workitems with this Status can transition to all other Statuses defined on the Worktype. A Status can have a maximum of 24 destinations.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "name": {
        "description": "The name of the Status. Valid length between 3 and 256 characters.",
        "type": "string"
      },
      "statusTransitionDelaySeconds": {
        "description": "Delay in seconds for auto status transition. Required if defaultDestinationStatusId is provided.",
        "format": "int32",
        "type": "integer"
      },
      "statusTransitionTime": {
        "description": "Time is represented as an ISO-8601 string without a timezone. For example: HH:mm:ss.SSS",
        "format": "local-time",
        "type": "string"
      }
    },
    "required": [
      "category",
      "name"
    ],
    "type": "object"
  },
  "WrapupCodeRequest": {
    "properties": {
      "createdBy": {
        "description": "The ID of the user that created the wrap-up code.",
        "type": "string"
      },
      "dateCreated": {
        "description": "Date when the wrap-up code was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "dateModified": {
        "description": "Date when the wrap-up code was last modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
        "format": "date-time",
        "type": "string"
      },
      "division": {
        "$ref": "#/definitions/WritableStarrableDivision",
        "description": "The division to which this entity belongs."
      },
      "id": {
        "description": "The globally unique identifier for the object.",
        "readOnly": true,
        "type": "string"
      },
      "modifiedBy": {
        "description": "The ID of the user that modified the wrap-up code.",
        "type": "string"
      },
      "name": {
        "description": "The wrap-up code name.",
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "required": [
      "name"
    ],
    "type": "object"
  },
  "WritableDivision": {
    "properties": {
      "id": {
        "description": "The globally unique identifier for the object.",
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "WritableStarrableDivision": {
    "properties": {
      "id": {
        "description": "The globally unique identifier for the object.",
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "selfUri": {
        "description": "The URI for this object",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  }
}